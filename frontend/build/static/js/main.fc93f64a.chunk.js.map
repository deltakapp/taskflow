{"version":3,"sources":["utils/apiDomain.js","components/Stages.js","components/ProjectsList.js","components/UserPanel.js","components/App.js","reportWebVitals.js","state/projectReducer.js","state/userReducer.js","state/rootReducer.js","index.js"],"names":["apiDomain","window","location","hostname","Project","projectId","useSelector","state","project","id","stages","user","shallowEqual","dispatch","useDispatch","e","a","preventDefault","newStageTitle","document","getElementById","value","alert","request","method","headers","Authorization","token","body","JSON","stringify","stageTitle","fetch","URL","response","ok","json","result","console","log","type","payload","status","stagesList","map","stage","title","onClick","handleDeleteStage","ProjectsList","projects","listProjects","handleLoadProject","handleDeleteProject","UserPanel","useState","showProjectsList","toggleProjectsList","handleLogin","email","password","cache","message","useEffect","name","onSubmit","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","prevState","action","flag","concat","filter","ReactDOM","render","StrictMode","store","createStore"],"mappings":"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","file":"static/js/main.fc93f64a.chunk.js","sourcesContent":["export const apiDomain =\r\n  window.location.hostname === \"localhost\"\r\n    ? \"http://localhost:5000\"\r\n    : \"https://taskflow.herokuapp.com\";\r\n","import { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\n\r\nexport default function Project() {\r\n  const projectId = useSelector((state) => state.project.id);\r\n  const stages = useSelector((state) => state.project.stages); //revise comparison fn\r\n  const user = useSelector((state) => state.user, shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(stages);\r\n\r\n  async function handleCreateStage(e) {\r\n    e.preventDefault();\r\n    const newStageTitle = document.getElementById(\"new-stage-title\").value;\r\n    if (newStageTitle === \"\") {\r\n      window.alert(\"You must enter a title to create a new stage\");\r\n      return;\r\n    }\r\n    const request = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        stageTitle: newStageTitle,\r\n      }),\r\n    };\r\n    const response = await fetch(\r\n      `${URL}/api/projects/${projectId}/stages`,\r\n      request\r\n    );\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      console.log(result); //TODO: convert projectId > projectId in server response\r\n      dispatch({ type: \"stage/created\", payload: result });\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteStage(id) {\r\n    const request = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const response = await fetch(\r\n      `${URL}/api/projects/${projectId}/stages/${id}`,\r\n      request\r\n    );\r\n    if (response.ok) {\r\n      dispatch({ type: \"stage/deleted\", payload: { id: id } });\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  const stagesList = stages ? (\r\n    stages.map((stage) => {\r\n      return (\r\n        <li key={stage.id}>\r\n          <h3>{stage.title}</h3>\r\n          <button onClick={() => handleDeleteStage(stage.id)}>\r\n            Delete Stage\r\n          </button>\r\n          <hr />\r\n        </li>\r\n      );\r\n    })\r\n  ) : (\r\n    <li>No stages yet</li>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>{projectId}</h2>\r\n      <ul>{stages && stagesList}</ul>\r\n      <textarea id=\"new-stage-title\"></textarea>\r\n      <button onClick={handleCreateStage}>Create Stage</button>\r\n    </div>\r\n  );\r\n}\r\n","/* Nomenclature: when creating a new project, the intended name */\r\n/* of the project is called \"title\", until it is sent to database */\r\n/* and created, after which the project's name is referred to as \"id\" */\r\n\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\n\r\nexport default function ProjectsList() {\r\n  const dispatch = useDispatch();\r\n  const projects = useSelector((state) => state.user.projects, shallowEqual);\r\n  const user = useSelector((state) => state.user, shallowEqual);\r\n\r\n  async function handleCreateProject(e) {\r\n    e.preventDefault();\r\n    // TODO add blank title error handling\r\n    const request = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        title: `${document.getElementById(\"new-project-title\").value}`,\r\n      }),\r\n    };\r\n    const response = await fetch(`${URL}/api/projects/`, request);\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      console.log(result);\r\n      dispatch({ type: \"project/created\", payload: result });\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteProject(id) {\r\n    const request = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const response = await fetch(`${URL}/api/projects/${id}`, request);\r\n    if (response.ok) {\r\n      dispatch({ type: \"project/deleted\", payload: { id: id } });\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  async function handleLoadProject(id) {\r\n    const request = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const response = await fetch(`${URL}/api/projects/${id}`, request);\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      console.log(result);\r\n      dispatch({\r\n        type: \"project/loaded\",\r\n        payload: { id: id, stages: result },\r\n      });\r\n    }\r\n  }\r\n\r\n  const listProjects = projects.map((id) => {\r\n    return (\r\n      //TODO: Change to project.id\r\n      <li key={id}>\r\n        {id}\r\n        <button onClick={() => handleLoadProject(id)}>Edit</button>\r\n        <button onClick={() => handleDeleteProject(id)}>Delete</button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {projects && <ul>{listProjects}</ul>}\r\n      <textarea id=\"new-project-title\"></textarea>\r\n      <button onClick={handleCreateProject}>Create Project</button>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport ProjectsList from \"./ProjectsList\";\r\n\r\nexport default function UserPanel() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user, shallowEqual);\r\n  const [showProjectsList, toggleProjectsList] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  async function handleLogin(e) {\r\n    e.preventDefault();\r\n    const email = document.getElementById(\"user-email\");\r\n    const password = document.getElementById(\"user-password\");\r\n    const request = {\r\n      method: \"POST\",\r\n      cache: \"no-store\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email.value,\r\n        password: password.value,\r\n      }),\r\n    };\r\n    const response = await fetch(`${URL}/api/users/login`, request);\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      console.log(result);\r\n      dispatch({\r\n        type: \"user/loggedIn\",\r\n        payload: { ...result.user, token: result.token },\r\n      });\r\n    } else {\r\n      const result = await response.json();\r\n      console.log(result.message || response);\r\n      dispatch({ type: \"user/failedLogin\" });\r\n    }\r\n    email.value = \"\";\r\n    password.value = \"\";\r\n  }\r\n\r\n  async function handleLogout(e) {\r\n    e.preventDefault();\r\n    const request = {\r\n      method: \"POST\",\r\n      cache: \"no-store\",\r\n      headers: { Authorization: `Bearer ${user.token}` },\r\n    };\r\n    const response = await fetch(`${URL}/api/users/logout`, request);\r\n    // TODO: handle rejection for expired token\r\n    if (!response.ok) {\r\n      console.log(response.status);\r\n      const result = await response.json();\r\n      console.log(result.message || response);\r\n      dispatch({\r\n        type: \"user/loggedOut\",\r\n      });\r\n    } else {\r\n      dispatch({ type: \"user/loggedOut\" });\r\n    }\r\n  }\r\n\r\n  if (user.name) {\r\n    return (\r\n      <div>\r\n        {`${user.name} `}\r\n        <button onClick={handleLogout}>Log Out</button>\r\n        <hr />\r\n        <button onClick={() => toggleProjectsList(!showProjectsList)}>\r\n          Toggle Projects List\r\n        </button>\r\n        {showProjectsList && <ProjectsList />}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        Log In:\r\n        <form onSubmit={handleLogin}>\r\n          <span>User Name: </span>\r\n          <input id=\"user-name\" type=\"text\" />\r\n          <br />\r\n          <span>Email: </span>\r\n          <input id=\"user-email\" type=\"text\" />\r\n          <br />\r\n          <span>Password: </span>\r\n          <input id=\"user-password\" type=\"text\" />\r\n          <button type=\"login\" onClick={handleLogin}>\r\n            Log In\r\n          </button>\r\n          <button type=\"submit\">Sign Up</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { shallowEqual, useSelector } from \"react-redux\";\r\nimport \"../styles/App.css\";\r\nimport Stages from \"./Stages\";\r\nimport UserPanel from \"./UserPanel\";\r\n\r\nfunction App() {\r\n  const project = useSelector((state) => state.project, shallowEqual);\r\n  console.log(project);\r\n  return (\r\n    <div className=\"App\">\r\n      <UserPanel />\r\n      <hr />\r\n      {project.id ? <Stages /> : \"No Project Selected\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n  id: 0,\r\n  title: \"\",\r\n  stages: [],\r\n};\r\n\r\nexport default function projectReducer(prevState = initialState, action) {\r\n  let state = { ...prevState };\r\n\r\n  switch (action.type) {\r\n    case \"project/created\": {\r\n      state = action.payload;\r\n      state.stages = [];\r\n      return state;\r\n    }\r\n    case \"project/loaded\": {\r\n      // not yet used\r\n      state = action.payload;\r\n      return state;\r\n    }\r\n    case \"project/unloaded\": {\r\n      // not yet used\r\n      return initialState;\r\n    }\r\n    case \"project/deleted\": {\r\n      console.log(action.payload.id);\r\n      if (action.payload.id === state.id) {\r\n        return initialState;\r\n      }\r\n      return state;\r\n    }\r\n    case \"stage/created\": {\r\n      console.log(action.payload);\r\n      state.stages = state.stages.concat(action.payload);\r\n      return state;\r\n    }\r\n    case \"stage/deleted\": {\r\n      state.stages = state.stages.filter(\r\n        (stage) => stage.id !== action.payload.id\r\n      );\r\n      return state;\r\n    }\r\n    case \"task/created\": {\r\n      console.log(action.payload);\r\n      state.stages = state.stages.concat(action.payload);\r\n      return state;\r\n    }\r\n    case \"task/deleted\": {\r\n      state.stages = state.stages.filter(\r\n        (stage) => stage.id !== action.payload.id\r\n      );\r\n      return state;\r\n    }\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","const initialState = {};\r\n\r\nexport default function userReducer(prevState = initialState, action) {\r\n  let state = { ...prevState };\r\n\r\n  switch (action.type) {\r\n    case \"user/created\": // currently not in use\r\n      state = action.payload;\r\n      state.flag = \"EMAIL_CONFIRMATION\"; //TODO: use me\r\n      return state;\r\n\r\n    case \"user/loggedIn\":\r\n      state = action.payload;\r\n      state.flag = \"LOGGED_IN\";\r\n      return state;\r\n\r\n    case \"user/failedLogin\":\r\n      state = { flag: \"FAILED_LOGIN\" };\r\n      return state;\r\n\r\n    case \"user/loggedOut\":\r\n      state = { flag: \"LOGGED_OUT\" };\r\n      return state;\r\n\r\n    case \"user/deleted\": // currently not in use\r\n      state = { flag: \"DELETED\" };\r\n      return state;\r\n\r\n    case \"project/created\":\r\n      state.projects = state.projects.concat(action.payload.id);\r\n      return state;\r\n\r\n    case \"project/deleted\":\r\n      state.projects = state.projects.filter(\r\n        (project) => project !== action.payload.id\r\n      );\r\n      return state;\r\n\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  project: projectReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport rootReducer from \"./state/rootReducer\";\r\nimport \"./styles/index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={createStore(rootReducer)}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}