{"version":3,"sources":["utils/apiDomain.js","utils/createRequest.js","utils/handleApiError.js","hooks/useRequestTools.js","components/Pages/HomePage.js","components/Pages/LogoutPage.js","utils/itemTypes.js","components/ProjectTab.js","components/Navbar.js","components/UserTab.js","components/PageHeader.js","hooks/useLogout.js","components/StageEditor.js","components/TaskCard.js","components/TaskCreator.js","components/Stage.js","components/StageCreator.js","components/ProjectBoard.js","components/Pages/ProjectPage.js","components/Pages/Redirect.js","components/Pages/SignupPage.js","components/Pages/UnsavedProjectPage.js","components/NewProjectCreator.js","components/ProjectsMenu.js","components/Pages/UserProjectsPage.js","components/UserSettings.js","components/Pages/UserSettingsPage.js","reportWebVitals.js","state/projectReducer.js","state/userReducer.js","state/rootReducer.js","state/tokenReducer.js","index.js"],"names":["apiDomain","window","location","hostname","createRequest","method","token","json","request","headers","Authorization","cache","body","JSON","stringify","handleApiError","response","a","text","message","alert","useRequestTools","useDispatch","useSelector","state","HomePage","dispatch","PATH","navigate","useNavigate","user","shallowEqual","e","preventDefault","email","document","getElementById","password","value","fetch","ok","result","type","payload","useEffect","id","className","alt","src","href","onSubmit","placeholder","to","LogoutPage","setTimeout","ItemTypes","ProjectTab","index","title","projectId","reorderProjects","loadProject","ref","useRef","useDrop","accept","hover","item","monitor","current","sourceIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleX","right","left","hoverClientX","getClientOffset","x","drop","useDrag","collect","isDragging","opacity","drag","style","onClick","NavPane","projects","useState","creatorIsOpen","toggleCreatorOpen","handleCreateProject","useCallback","get","console","log","project","newProjects","splice","map","renderProjectTab","createProject","htmlFor","height","viewBox","version","width","fillRule","d","UserTab","name","logoutUser","PageHeader","useLogout","StageEditor","stageId","open","toggleOpen","newTitle","setNewTitle","maxLength","onChange","target","TaskCard","taskId","taskIndex","stageIndex","task","stages","tasks","isEditing","toggleEditing","details","newDetails","setNewDetails","deleteTask","URL","titleBar","rows","taskOptions","TaskCreator","setTitle","setDetails","Stage","reorderStages","stage","taskList","role","handleDeleteStage","StageCreator","required","ProjectBoard","newStages","stageList","ProjectPage","backend","HTML5Backend","Redirect","replace","SignupPage","password1","password2","UnsavedProjectPage","NewProjectCreator","isActive","toggleActive","ProjectsMenu","listProjects","handleLoadProject","handleDeleteProject","UserPage","UserSettings","isEditingUsername","toggleEditingUsername","newUsername","setNewUsername","isEditingEmail","toggleEditingEmail","newEmail","setNewEmail","isEditingPassword","toggleEditingPassword","editUsername","editEmail","editPassword","oldPassword","newPassword1","newpassword2","newPassword","resetPasswordFields","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","prevState","action","startsWith","concat","findIndex","filter","find","flag","ReactDOM","render","StrictMode","store","createStore","path","element"],"mappings":"6XAIaA,EACkB,cAA7BC,OAAOC,SAASC,SACZ,wBACA,iCCJS,SAASC,EAAcC,EAAQC,EAAOC,GACnD,IAAMC,EAAU,CACdH,OAAQA,EACRI,QAAS,CACPC,cAAeJ,EACfK,MAAO,aASX,OALIJ,IACFC,EAAQC,QAAQ,gBAAkB,mBAClCD,EAAQI,KAAOC,KAAKC,UAAUP,IAGzBC,ECjBM,SAAeO,EAA9B,kC,4CAAe,WAA8BC,GAA9B,eAAAC,EAAA,sEAEJD,EAASE,OAFL,gDAGX,qEAHW,OACPC,EADO,KAIbC,MAAM,UAAD,OAAWD,IAJH,4C,sBCOA,SAASE,IAKtB,MAAO,CAACjB,EAJSkB,cAIgBP,EAHvB,UAAMf,EAAN,QACIuB,aAAY,SAACC,GAAD,OAAWA,EAAMlB,U,WCL9B,SAASmB,IACtB,MAAwDJ,IAAxD,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KACMC,EAAWC,cACXC,EAAOP,aAAY,SAACC,GAAD,OAAWA,EAAMM,OAAMC,KAHf,4CAUjC,WAA2BC,GAA3B,uBAAAf,EAAA,6DACEe,EAAEC,iBACIC,EAAQC,SAASC,eAAe,cAChCC,EAAWF,SAASC,eAAe,iBAEnC5B,EAAUJ,EAAc,OAAQ,KAAM,CAC1C8B,MAAOA,EAAMI,MACbD,SAAUA,EAASC,QAPvB,SAUyBC,MAAM,GAAD,OAAIZ,EAAJ,gBAAwBnB,GAVtD,YAUQQ,EAVR,QAWewB,GAXf,kCAYyBxB,EAAST,OAZlC,QAYUkC,EAZV,OAaIf,EAAS,CACPgB,KAAM,gBACNC,QAASF,EAAOX,KAChBxB,MAAOmC,EAAOnC,QAhBpB,wBAmBSS,EAAeC,GAnBxB,QAqBEkB,EAAMI,MAAQ,GACdD,EAASC,MAAQ,GAtBnB,6CAViC,sBAmCjC,OA7BAM,qBAAU,WACJd,EAAKe,IAAIjB,EAAS,WAAD,OAAYE,EAAKe,OACrC,CAACf,EAAKe,GAAIjB,IA4BX,uBAAMkB,UAAU,SAAhB,UACE,qBAAKA,UAAU,OAAOC,IAAI,gBAAgBC,IAAI,cAC9C,6BACE,mBAAGC,KAAK,IAAR,6BAEF,uCACA,uBAAMC,SA1CuB,4CA0C7B,UACE,uBAAOL,GAAG,aAAaH,KAAK,OAAOS,YAAY,WAC/C,uBAAON,GAAG,gBAAgBH,KAAK,WAAWS,YAAY,aACtD,wBAAQT,KAAK,SAAb,uBAEF,6BACE,cAAC,IAAD,CAAMU,GAAG,UAAT,0BC/CO,SAASC,IACtB,IAAMzB,EAAWC,cAQjB,OANAe,qBAAU,WACRU,YAAW,WACT1B,EAAS,OACR,QACF,CAACA,IAGF,uBAAMkB,UAAU,SAAhB,UACE,qBAAKA,UAAU,OAAOC,IAAI,gBAAgBC,IAAI,cAC9C,6BACE,mBAAGC,KAAK,IAAR,6BAEF,qF,4BCrBOM,G,MACC,cADDA,EAEJ,QCKM,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,YAEMC,EAAMC,iBAAO,MAEnB,EAAiBC,kBAAQ,CACvBC,OAAQV,EACRW,MAFuB,SAEjBC,EAAMC,GAAU,IAAD,EACnB,GAAKN,EAAIO,QAAT,CAIA,IAAMC,EAAcH,EAAKV,MAEnBc,EAAad,EAEnB,GAAIa,IAAgBC,EAApB,CAIA,IAAMC,EAAiB,UAAGV,EAAIO,eAAP,aAAG,EAAaI,wBAEjCC,GACHF,EAAkBG,MAAQH,EAAkBI,MAAQ,EAIjDC,EAFeT,EAAQU,kBAEKC,EAAIP,EAAkBI,KAIpDN,EAAcC,GAAcM,EAAeH,GAG3CJ,EAAcC,GAAcM,EAAeH,IAG/Cd,EAAgBU,EAAaC,GAC7BJ,EAAKV,MAAQc,QAjCRS,EAAT,oBAqCA,EAA+BC,kBAAQ,CACrCvC,KAAMa,EACNY,KAAM,WACJ,MAAO,CAAET,QAAOD,UAElByB,QAAS,SAACd,GACR,MAAO,CAAEe,WAAYf,EAAQe,iBANjC,mBAUMC,EAVN,KAASD,WAUoB,EAAI,EAIjC,OAFAE,EAZA,MAYKL,EAAKlB,IAGR,oBAAIA,IAAKA,EAAKwB,MAAO,CAAEF,WAAvB,SACE,wBAAQtC,UAAU,MAAMyC,QAAS,kBAAM1B,EAAYF,IAAnD,SACGD,MC/DM,SAAS8B,IACtB,MACEnE,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEMsB,EAAWC,cACX4D,EAAWlE,aAAY,SAACC,GAAD,OAAWA,EAAMM,KAAK2D,WAAU1D,KAC7D,EAA2C2D,oBAAS,GAApD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAsBC,sBAAW,uCACrC,WAAO9D,GAAP,qBAAAf,EAAA,6DACEe,EAAEC,iBAEIzB,EAAUJ,EAAc,OAAQE,EAAO,CAC3CoD,MAAM,GAAD,OAAKvB,SAASC,eAAe,qBAAqBE,SAJ3D,SAMyBC,MAAM,GAAD,OAAIZ,EAAJ,cAAsBnB,GANpD,YAMQQ,EANR,QAOewB,GAPf,wBAQUlC,EAAQU,EAASP,QAAQsF,IAAI,gBARvC,SASyB/E,EAAST,OATlC,OASUkC,EATV,OAUIuD,QAAQC,IAAIjF,GACZU,EAAS,CACPgB,KAAM,kBACNC,QAASF,EAAOyD,QAChB5F,MAAOA,IAETsF,GAAkB,GAhBtB,wBAiBS7E,EAAeC,GAjBxB,4CADqC,sDAoBrC,CAACV,EAAOF,EAAesB,EAAUX,EAAgBY,IAG7CkC,EAAciC,sBAAW,uCAC7B,WAAOnC,GAAP,qBAAA1C,EAAA,6DACQT,EAAUJ,EAAc,MAAOE,GADvC,SAEyBiC,MAAM,GAAD,OAAIZ,EAAJ,qBAAqBgC,GAAanD,GAFhE,YAEQQ,EAFR,QAGewB,GAHf,wBAIUlC,EAAQU,EAASP,QAAQsF,IAAI,gBAJvC,SAKyB/E,EAAST,OALlC,OAKUkC,EALV,OAMIuD,QAAQC,IAAIjF,GACZU,EAAS,CACPgB,KAAM,iBACNC,QAASF,EAAOyD,QAChB5F,MAAOA,IAETsB,EAAS,cAAD,OAAe+B,IAZ3B,wBAaS5C,EAAeC,GAbxB,4CAD6B,sDAgB7B,CAACV,EAAOF,EAAesB,EAAUX,EAAgBY,EAAMC,IAInDgC,EAAkBkC,sBAAW,uCACjC,WAAOxB,EAAaC,GAApB,qBAAAtD,EAAA,yDACOX,EADP,wDAEQ6F,EAFR,YAE0BV,IACZW,OAAO7B,EAAY,EAAG4B,EAAYC,OAAO9B,EAAa,GAAG,IAGrE5C,EAAS,CAAEgB,KAAM,uBAAwBC,QAASwD,IAG5C3F,EAAUJ,EAAc,QAASE,EAAO,CAC5CmF,SAAUU,EAAYE,KAAI,SAACH,GAAD,OAAaA,EAAQvC,eAVnD,SAYyBpB,MAAM,GAAD,OAAIZ,EAAJ,WAAmBnB,GAZjD,QAYQQ,EAZR,QAaewB,IACLlC,EAAQU,EAASP,QAAQsF,IAAI,kBACxBrE,EAAS,CAAEgB,KAAM,gBAAiBpC,MAAOA,IAC/CS,EAAeC,GAhBxB,4CADiC,wDAmBjC,CAACyE,EAAUnF,EAAOF,EAAesB,EAAUX,EAAgBY,IAGvD2E,EAAmBR,uBACvB,SAACrC,EAAOC,EAAOC,GACb,OACE,cAACH,EAAD,CAEEC,MAAOA,EACPC,MAAOA,EACPC,UAAWA,EACXC,gBAAiBA,EACjBC,YAAaA,GALRF,KASX,CAACC,EAAiBC,IAGd0C,EAAgBZ,EACpB,qBAAK7C,UAAU,UAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,uBAAMD,GAAG,sBAAsBK,SAAU2C,EAAzC,UACE,uBAAOW,QAAQ,oBAAf,0BACA,uBAAO3D,GAAG,sBACV,sBAAKC,UAAU,kBAAf,UACE,wBAAQD,GAAG,SAAX,4BACA,wBACEC,UAAU,8BACVyC,QAAS,kBAAMK,GAAkB,IACjClD,KAAK,SAHP,8BAYR,oBAAII,UAAU,cAAd,SACE,wBAAQyC,QAAS,kBAAMK,GAAkB,IAAOlC,MAAM,kBAAtD,SACE,qBACE+C,OAAO,KACPC,QAAQ,YACRC,QAAQ,MACRC,MAAM,KACN,sBAAoB,OALtB,SAOE,sBACEC,SAAS,UACTC,EAAE,2IAOZ,OACE,sBAAKjE,GAAG,SAAR,UACE,qBAAIC,UAAU,SAAd,iBACG2C,QADH,IACGA,OADH,EACGA,EAAUY,KAAI,SAACH,EAASzC,GAAV,OACb6C,EAAiB7C,EAAOyC,EAAQxC,MAAOwC,EAAQvC,cAEhD4C,KAEH,0B,cCpIS,SAASQ,IACtB,MACE1F,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEMsB,EAAWC,cACXC,EAAOP,aAAY,SAACC,GAAD,OAAWA,EAAMM,OAAMC,KAJhB,4CAahC,8BAAAd,EAAA,6DACQT,EAAUJ,EAAc,OAAQE,GADxC,SAEyBiC,MAAM,GAAD,OAAIZ,EAAJ,iBAAyBnB,GAFvD,QAEQQ,EAFR,QAGgBwB,IAAIzB,EAAeC,GAEjCsC,YAAW,WACT5B,EAAS,CAAEgB,KAAM,qBAChB,KAPL,4CAbgC,sBAuBhC,OAAIZ,EAAKe,GAEL,sBAAKA,GAAG,WAAR,UACE,wBAAQA,GAAG,gBAAgB0C,QAnBjC,SAA4BvD,GAC1BA,EAAEC,iBACFP,EAAS,CAAEgB,KAAM,qBACjBd,EAAS,SAAD,OAAUE,EAAKe,MAgBnB,SACGf,EAAKkF,MAAQ,mBAEhB,sBAAKnE,GAAG,aAAR,UACE,wBAAQ0C,QAAS,kBAAM3D,EAAS,SAAD,OAAUE,EAAKe,GAAf,eAA/B,sBAGA,wBAAQ0C,QAAS,kBAAM3D,EAAS,SAAD,OAAUE,EAAKe,GAAf,eAA/B,yBAIA,wBAAQ0C,QAAS,kBArCO,0CAqCD0B,IAAcpE,GAAG,aAAxC,2BAQJ,qBAAKA,GAAG,WAAR,SACE,cAAC,IAAD,CAAMO,GAAG,QAAQP,GAAG,YAApB,sBCnDO,SAASqE,IAGtB,OCAa,WACb,IAAM5G,EAAQiB,aAAY,SAACC,GAAD,OAAWA,EAAMlB,SACrCsB,EAAWC,cAEjBe,qBAAU,WACHtC,GACHsB,EAAS,eAIV,CAACtB,EAAOsB,IDZXuF,GAGE,yBAAQtE,GAAG,cAAX,UACE,qBAAKA,GAAG,YAAR,SACE,qBAAKC,UAAU,OAAOC,IAAI,OAAOC,IAAI,qBAEvC,cAAC,EAAD,O,qBERS,SAASoE,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,EACEhG,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEA,EAA2BoF,oBAAS,GAApC,mBAAO4B,EAAP,KAAaC,EAAb,KACA,EAAgC7B,mBAAS,IAAzC,mBAAO8B,EAAP,KAAiBC,EAAjB,KAJ+C,4CAQ/C,WAAmCzF,GAAnC,qBAAAf,EAAA,6DACEe,EAAEC,iBACIzB,EAAUJ,EAAc,QAASE,EAAO,CAC5CoD,MAAO8D,IAHX,SAKyBjF,MAAM,GAAD,OAAIZ,EAAJ,mBAAmB0F,GAAW7G,GAL5D,YAKQQ,EALR,QAMewB,GANf,wBAOI+E,GAAW,GACLjH,EAAQU,EAASP,QAAQsF,IAAI,gBARvC,UASyB/E,EAAST,OATlC,QASUkC,EATV,OAUIf,EAAS,CAAEgB,KAAM,gBAAiBC,QAASF,EAAQnC,MAAOA,IAV9D,wBAWSS,EAAeC,GAXxB,6CAR+C,sBAsB/C,OAAOsG,EACL,qBAAKxE,UAAU,UAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,uBAAMA,UAAU,eAAeI,SAzBU,4CAyBzC,UACE,uBAAOsD,QAAQ,SAAf,2BACA,uBACE9D,KAAK,OACLI,UAAU,SACV4E,UAAU,KACVpF,MAAOkF,EACPG,SAAU,SAAC3F,GAAD,OAAOyF,EAAYzF,EAAE4F,OAAOtF,UAExC,sBAAKQ,UAAU,kBAAf,UACE,wBAAQA,UAAU,wBAAwBJ,KAAK,SAA/C,oBAGA,wBACEI,UAAU,8BACVyC,QAAS,kBAAMgC,GAAW,IAC1B7E,KAAK,SAHP,8BAaR,wBAAQI,UAAU,MAAMyC,QAAS,kBAAMgC,GAAW,IAAlD,0B,OCjDW,SAASM,EAAT,GAA+D,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,UAAWV,EAAuB,EAAvBA,QAASW,EAAc,EAAdA,WAC7D,EACE3G,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEM2H,EAAO1G,aACX,SAACC,GAAD,OAAWA,EAAM0E,QAAQgC,OAAOF,GAAYG,MAAMJ,MAGpD,EAAmCrC,oBAAS,GAA5C,mBAAO0C,EAAP,KAAkBC,EAAlB,KACA,EAAgC3C,mBAASuC,EAAKvE,OAA9C,mBAAO8D,EAAP,KAAiBC,EAAjB,KACA,EAAoC/B,mBAASuC,EAAKK,SAAlD,mBAAOC,EAAP,KAAmBC,EAAnB,KAT2E,4CAkB3E,kCAAAvH,EAAA,6DACQT,EAAUJ,EAAc,QAASE,EAAO,CAC5CoD,MAAO8D,EACPc,QAASC,IAHb,SAKyBhG,MAAM,GAAD,OACvBZ,EADuB,mBACR0F,EADQ,kBACSS,GACnCtH,GAPJ,YAKQQ,EALR,QASewB,GATf,wBAUUlC,EAAQU,EAASP,QAAQsF,IAAI,gBAVvC,SAWyB/E,EAAST,OAXlC,OAWUkC,EAXV,OAYIf,EAAS,CACPgB,KAAM,eACNC,QAAS,CAAE0E,QAASA,EAASY,KAAMxF,GACnCnC,MAAOA,IAET+H,GAAc,GAjBlB,wBAkBStH,EAAeC,GAlBxB,QAmBEqH,GAAc,GAnBhB,6CAlB2E,+BAwC5DI,IAxC4D,2EAwC3E,gCAAAxH,EAAA,6DACQT,EAAUJ,EAAc,SAAUE,GAD1C,SAEyBiC,MAAM,GAAD,OACvBmG,EADuB,uBACLrB,EADK,kBACYS,GACtCtH,GAJJ,QAEQQ,EAFR,QAMewB,IACLlC,EAAQU,EAASP,QAAQsF,IAAI,gBACnCrE,EAAS,CACPgB,KAAM,eACNC,QAAS,CAAE0E,QAASA,EAASS,OAAQA,GACrCxH,MAAOA,KAEJS,EAAeC,GAbxB,4CAxC2E,sBAwD3E,IAAM2H,EAAWP,EACf,sBAAKtF,UAAU,iBAAf,UACE,uBACEJ,KAAK,OACLI,UAAU,oBACVK,YAAa8E,EAAKvE,MAClBiE,SAAU,SAAC3F,GAAD,OAAOyF,EAAYzF,EAAE4F,OAAOtF,UAExC,gCACE,wBAAQQ,UAAU,uBAAuByC,QArD/C,WACEkC,EAAYQ,EAAKvE,OACjB8E,EAAcP,EAAKK,SACnBD,GAAc,IAkDV,0BAGA,wBAAQvF,UAAU,gBAAgByC,QApEmC,2CAoErE,gCAOJ,sBAAKzC,UAAU,iBAAf,UACE,mBAAGA,UAAU,aAAb,SAA2BmF,EAAKvE,QAChC,wBAAQZ,UAAU,gBAAgByC,QAAS,kBAAM8C,GAAc,IAA/D,6BAMEC,EAAUF,EACd,0BACEtF,UAAU,eACVkE,KAAK,eACL4B,KAAK,IACLtG,MAAOiG,EACPZ,SAAU,SAAC3F,GAAD,OAAOwG,EAAcxG,EAAE4F,OAAOtF,UAG1C,iCACG2F,EAAKK,SAAW,uBACjB,mBAAGxF,UAAU,eAAb,SAA6BmF,EAAKK,aAIhCO,EAAcT,GAClB,qCACE,uBACA,sBAAKtF,UAAU,eAAf,UACE,wBAAQA,UAAU,kBAAkByC,QAAS,kBAAMkD,KAAnD,4CAGA,wBAAQ3F,UAAU,oBAAoByC,QAAS,kBAAMkD,KAArD,8CAON,OACE,sBAAK3F,UAAU,YAAf,UACG6F,EACAL,EACAO,KCvHQ,SAASC,EAAT,GAAmC,IAAZzB,EAAW,EAAXA,QACpC,EACEhG,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEA,EAA2BoF,oBAAS,GAApC,mBAAO4B,EAAP,KAAaC,EAAb,KACA,EAA0B7B,mBAAS,IAAnC,mBAAOhC,EAAP,KAAcqF,EAAd,KACA,EAA8BrD,mBAAS,IAAvC,mBAAO4C,EAAP,KAAgBU,EAAhB,KAL+C,4CAO/C,WAAgChH,GAAhC,qBAAAf,EAAA,6DACEe,EAAEC,iBAEIzB,EAAUJ,EAAc,OAAQE,EAAO,CAC3CoD,MAAOA,EACP4E,QAASA,IALb,SAOyB/F,MAAM,GAAD,OAAIZ,EAAJ,mBAAmB0F,EAAnB,UAAoC7G,GAPlE,YAOQQ,EAPR,QAQewB,GARf,wBASUlC,EAAQU,EAASP,QAAQsF,IAAI,gBATvC,SAUyB/E,EAAST,OAVlC,OAUUkC,EAVV,OAWIf,EAAS,CACPgB,KAAM,eACNC,QAAS,CAAEsF,KAAMxF,EAAQ4E,QAASA,GAClC/G,MAAOA,IAETiH,GAAW,GACXwB,EAAS,IACTC,EAAW,IAlBf,wBAmBSjI,EAAeC,GAnBxB,6CAP+C,sBAgC/C,OAAOsG,EACL,qBAAKxE,UAAU,eAAf,SACE,uBAAMI,SAlCqC,4CAkC3C,UACE,0BACEJ,UAAU,iBACVK,YAAY,eACZuE,UAAU,KACVpF,MAAOoB,EACPiE,SAAU,SAAC3F,GAAD,OAAO+G,EAAS/G,EAAE4F,OAAOtF,UAErC,0BACEQ,UAAU,mBACVK,YAAY,2BACZuE,UAAU,MACVpF,MAAOgG,EACPX,SAAU,SAAC3F,GAAD,OAAOgH,EAAWhH,EAAE4F,OAAOtF,UAEvC,sBAAKQ,UAAU,kBAAf,UACE,wBAAQA,UAAU,uBAAuBJ,KAAK,SAA9C,yBAGA,wBACEI,UAAU,8BACVyC,QAAS,kBAAMgC,GAAW,IAC1B7E,KAAK,SAHP,4BAWN,qBAAKI,UAAU,2BAAf,SACE,wBACEA,UAAU,wBACVyC,QAAS,kBAAMgC,GAAW,IAF5B,SAIE,qBACEd,OAAO,KACPC,QAAQ,YACRC,QAAQ,MACRC,MAAM,KACN,sBAAoB,OACpB9D,UAAU,OANZ,SAQE,sBACE+D,SAAS,UACTC,EAAE,2ICrEC,SAASmC,EAAT,GAA+D,IAA9C5B,EAA6C,EAA7CA,QAASW,EAAoC,EAApCA,WAAYtE,EAAwB,EAAxBA,MAAOwF,EAAiB,EAAjBA,cAC1D,EACE7H,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEMwD,EAAMC,iBAAO,MACboF,EAAQ5H,aAAY,SAACC,GAAD,OAAWA,EAAM0E,QAAQgC,OAAOF,MACpDG,EAAQ5G,aACZ,SAACC,GAAD,OAAWA,EAAM0E,QAAQgC,OAAOF,GAAYG,QAC5CpG,KAGF,EAAiBiC,kBAAQ,CACvBC,OAAQV,EACRW,MAFuB,SAEjBC,EAAMC,GAAU,IAAD,EACnB,GAAKN,EAAIO,QAAT,CAIA,IAAMC,EAAcH,EAAKV,MAEnBc,EAAayD,EAEnB,GAAI1D,IAAgBC,EAApB,CAIA,IAAMC,EAAiB,UAAGV,EAAIO,eAAP,aAAG,EAAaI,wBAEjCC,GACHF,EAAkBG,MAAQH,EAAkBI,MAAQ,EAIjDC,EAFeT,EAAQU,kBAEKC,EAAIP,EAAkBI,KAIpDN,EAAcC,GAAcM,EAAeH,GAG3CJ,EAAcC,GAAcM,EAAeH,IAG/CwE,EAAc5E,EAAaC,GAC3BJ,EAAKV,MAAQc,QAjCRS,EAAT,oBAqCA,EAA+BC,kBAAQ,CACrCvC,KAAMa,EACNY,KAAM,WACJ,MAAO,CAAET,QAAOsE,eAElB9C,QAAS,SAACd,GACR,MAAO,CAAEe,WAAYf,EAAQe,iBANjC,wBAASA,WA/CkE,4CA6D3E,WAAiCkC,GAAjC,mBAAApG,EAAA,6DACQT,EAAUJ,EAAc,SAAUE,GAD1C,SAEyBiC,MAAM,GAAD,OAAIZ,EAAJ,mBAAmB0F,GAAW7G,GAF5D,QAEQQ,EAFR,QAGewB,IACLlC,EAAQU,EAASP,QAAQsF,IAAI,gBACnCrE,EAAS,CACPgB,KAAM,gBACNC,QAAS,CAAE0E,QAASA,GACpB/G,MAAOA,KAEJS,EAAeC,GAVxB,2CA7D2E,yBA2D3EqE,EAZA,MAYKL,EAAKlB,IAeV,IAAMsF,EAAWjB,EACbA,EAAM9B,KAAI,SAAC4B,EAAMxE,GACf,OACE,cAACoE,EAAD,CAEEC,OAAQG,EAAKH,OACbC,UAAWtE,EACX4D,QAASA,EACTW,WAAYA,GAJPC,EAAKH,WAQhB,KAEJ,OACE,0BAAShF,UAAU,QAAsBgB,IAAKA,EAA9C,UACE,qBAAKhB,UAAU,eAAf,SACE,0BAASA,UAAU,WAAnB,UACG,IAED,0BAASA,UAAU,GAAGuG,KAAK,SAA3B,UACE,oBAAIvG,UAAU,cAAd,SAA6BqG,EAAMzF,QACnC,qBACE+C,OAAO,KACPC,QAAQ,YACRC,QAAQ,MACRC,MAAM,KACN,sBAAoB,OACpB9D,UAAU,cANZ,SAQE,sBAAMgE,EAAE,yHAEV,cAAC,EAAD,CAAaO,QAASA,EAASW,WAAYA,OAE7C,sBAAMlF,UAAU,wBAAhB,SACE,+BACE,6BACE,cAACsE,EAAD,CAAaC,QAASA,MAExB,6BACE,wBACEvE,UAAU,MACVyC,QAAS,kBApHkD,2CAoH5C+D,CAAkBjC,IAFnC,sCAWT+B,IApC6B/B,GCnGrB,SAASkC,EAAT,GAAsC,IAAd5F,EAAa,EAAbA,UACrC,EACEtC,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEA,EAA2BoF,oBAAS,GAApC,mBAAO4B,EAAP,KAAaC,EAAb,KACA,EAAgC7B,mBAAS,IAAzC,mBAAO8B,EAAP,KAAiBC,EAAjB,KAJkD,4CAMlD,WAAiCzF,GAAjC,qBAAAf,EAAA,6DACEe,EAAEC,iBACIzB,EAAUJ,EAAc,OAAQE,EAAO,CAC3CoD,MAAO8D,EACP7D,UAAWA,IAJf,SAMyBpB,MAAM,GAAD,OAAIZ,EAAJ,WAAmBnB,GANjD,YAMQQ,EANR,QAOewB,GAPf,wBAQUlC,EAAQU,EAASP,QAAQsF,IAAI,gBARvC,SASyB/E,EAAST,OATlC,OASUkC,EATV,OAUIf,EAAS,CACPgB,KAAM,gBACNC,QAASF,EACTnC,MAAOA,IAETiH,GAAW,GACXE,EAAY,IAhBhB,wBAiBS1G,EAAeC,GAjBxB,6CANkD,sBA0BlD,OAAOsG,EACL,qBAAKxE,UAAU,UAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,uBAAMI,SA7BsC,4CA6B5C,UACE,uBAAOsD,QAAQ,kBAAf,2BACA,uBACE9D,KAAK,OACLG,GAAG,kBACHP,MAAOkF,EACPE,UAAU,KACV8B,UAAQ,EACR7B,SAAU,SAAC3F,GAAD,OAAOyF,EAAYzF,EAAE4F,OAAOtF,UAExC,sBAAKQ,UAAU,kBAAf,UACE,wBAAQA,UAAU,mBAAmBJ,KAAK,SAA1C,0BAGA,wBACEI,UAAU,2BACVyC,QAAS,kBAAMgC,GAAW,IAF5B,8BAWR,yBAASzE,UAAU,eAAnB,SACE,wBAAQA,UAAU,MAAMyC,QAAS,kBAAMgC,GAAW,IAAlD,4BCjDS,SAASkC,IACtB,MACEpI,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEMqD,EAAYpC,aAAY,SAACC,GAAD,OAAWA,EAAM0E,QAAQvC,aACjDuE,EAAS3G,aAAY,SAACC,GAAD,OAAWA,EAAM0E,QAAQgC,SAAQnG,KAGtDmH,EAAgBpD,sBAAW,uCAC/B,WAAOxB,EAAaC,GAApB,qBAAAtD,EAAA,yDACOX,EADP,wDAEQoJ,EAFR,YAEwBxB,IACZ9B,OAAO7B,EAAY,EAAGmF,EAAUtD,OAAO9B,EAAa,GAAG,IAGjE5C,EAAS,CAAEgB,KAAM,wBAAyBC,QAAS+G,IAG7ClJ,EAAUJ,EAAc,QAASE,EAAO,CAC5C4H,OAAQwB,EAAUrD,KAAI,SAAC8C,GAAD,OAAWA,EAAM9B,aAV3C,SAYyB9E,MAAM,GAAD,OAAIZ,EAAJ,qBAAqBgC,GAAanD,GAZhE,QAYQQ,EAZR,QAaewB,IACLlC,EAAQU,EAASP,QAAQsF,IAAI,kBACxBrE,EAAS,CAAEgB,KAAM,gBAAiBpC,MAAOA,IAC/CS,EAAeC,GAhBxB,4CAD+B,wDAmB/B,CAACkH,EAAQ5H,EAAOqD,EAAWvD,EAAesB,EAAUX,EAAgBY,IAGhEgI,EAAS,OAAGzB,QAAH,IAAGA,OAAH,EAAGA,EAAQ7B,KAAI,SAAC8C,EAAO1F,GAAR,OAC5B,cAAC,EAAD,CAEE4D,QAAS8B,EAAM9B,QACfW,WAAYvE,EACZC,MAAOyF,EAAMzF,MACbwF,cAAeA,GAJVC,EAAM9B,YAQf,OACE,sBAAKxE,GAAG,gBAAR,UACG8G,EAID,cAACJ,EAAD,CAAc5F,UAAWA,OC9ChB,SAASiG,IACtB,OACE,eAAC,cAAD,CAAaC,QAASC,eAAtB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,+BACE,cAAC,EAAD,SCVO,SAASC,IACtB,OAAO,cAAC,IAAD,CAAU3G,GAAG,WAAW4G,SAAO,ICEzB,SAASC,IACtB,MAAwD5I,IAAxD,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KACMC,EAAWC,cACXC,EAAOP,aAAY,SAACC,GAAD,OAAWA,EAAMM,QAHP,4CAYnC,WAA4BE,GAA5B,2BAAAf,EAAA,yDACEe,EAAEC,iBACI+E,EAAO7E,SAASC,eAAe,aAC/BF,EAAQC,SAASC,eAAe,cAChC8H,EAAY/H,SAASC,eAAe,mBACpC+H,EAAYhI,SAASC,eAAe,mBAEtC8H,EAAU5H,QAAU6H,EAAU7H,MAPpC,wBAQIlB,MAAM,sCACN8I,EAAU5H,MAAQ,GAClB6H,EAAU7H,MAAQ,GAVtB,kCAcQ9B,EAAUJ,EAAc,OAAQ,KAAM,CAC1C4G,KAAMA,EAAK1E,MACXJ,MAAOA,EAAMI,MACbD,SAAU6H,EAAU5H,QAjBxB,UAoByBC,MAAM,GAAD,OAAIZ,EAAJ,UAAkBnB,GApBhD,aAoBQQ,EApBR,QAqBewB,GArBf,kCAsByBxB,EAAST,OAtBlC,QAsBUkC,EAtBV,OAuBIf,EAAS,CACPgB,KAAM,eACNC,QAASF,EAAOX,KAChBxB,MAAOmC,EAAOnC,QAEhBc,MAAM,yBAAD,OAA0B4F,EAAK1E,MAA/B,oBAAgDJ,EAAMI,QA5B/D,wBA6BSvB,EAAeC,GA7BxB,QA+BEgG,EAAK1E,MAAQ,GACbJ,EAAMI,MAAQ,GACd4H,EAAU5H,MAAQ,GAClB6H,EAAU7H,MAAQ,GAlCpB,6CAZmC,sBAiDnC,OA3CAM,qBAAU,WACJd,EAAKe,IACPjB,EAAS,WAAD,OAAYE,EAAKe,OAE1B,CAACf,EAAKe,GAAIjB,IAuCLE,EAAKe,GAuBX,mDAtBA,uBAAMC,UAAU,SAAhB,UACE,qBAAKA,UAAU,OAAOC,IAAI,gBAAgBC,IAAI,cAC9C,6BACE,mBAAGC,KAAK,IAAR,6BAEF,yCACA,uBAAMC,SAxDyB,4CAwD/B,UACE,uBAAOL,GAAG,YAAYH,KAAK,OAAOS,YAAY,cAC9C,uBAAON,GAAG,aAAaH,KAAK,OAAOS,YAAY,kBAC/C,uBAAON,GAAG,kBAAkBH,KAAK,WAAWS,YAAY,aACxD,uBACEN,GAAG,kBACHH,KAAK,WACLS,YAAY,qBAEd,wBAAQT,KAAK,SAAb,wBAEF,6BACE,cAAC,IAAD,CAAMU,GAAG,IAAT,yBC3EO,SAASgH,IACtB,OAAO,iD,aCGM,SAASC,IACtB,MACEhJ,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEMsB,EAAWC,cACjB,EAAiC6D,oBAAS,GAA1C,mBAAO4E,EAAP,KAAiBC,EAAjB,KAJ0C,4CAM1C,WAAmCvI,GAAnC,qBAAAf,EAAA,6DACEe,EAAEC,iBAEIzB,EAAUJ,EAAc,OAAQE,EAAO,CAC3CoD,MAAM,GAAD,OAAKvB,SAASC,eAAe,qBAAqBE,SAJ3D,SAMyBC,MAAM,GAAD,OAAIZ,EAAJ,cAAsBnB,GANpD,YAMQQ,EANR,QAOewB,GAPf,wBAQUlC,EAAQU,EAASP,QAAQsF,IAAI,gBARvC,SASyB/E,EAAST,OATlC,cASUkC,EATV,iBAUUf,EAAS,CACbgB,KAAM,kBACNC,QAASF,EAAOyD,QAChB5F,MAAOA,IAbb,QAeIsB,EAAS,cAAD,OAAea,EAAOyD,QAAQvC,YAf1C,wBAgBS5C,EAAeC,GAhBxB,6CAN0C,sBAyB1C,OAAIsJ,EAEA,uBAAMzH,GAAG,sBAAsBK,SA3BO,4CA2BtC,UACE,sDACA,uBAAOL,GAAG,oBAAoBM,YAAY,kBAC1C,wBAAQN,GAAG,SAAX,4BACA,wBACEA,GAAG,6BACH0C,QAAS,kBAAMgF,GAAa,IAF9B,uBAUF,wBACE1H,GAAG,6BACH0C,QAAS,kBAAMgF,GAAa,IAF9B,+BCvCS,SAASC,IACtB,MACEnJ,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAEMsB,EAAWC,cACX4D,EAAWlE,aAAY,SAACC,GAAD,OAAWA,EAAMM,KAAK2D,WAAU1D,KAJxB,4CAQrC,WAAmC4B,GAAnC,mBAAA1C,EAAA,6DACQT,EAAUJ,EAAc,SAAUE,GAD1C,SAEyBiC,MAAM,GAAD,OAAIZ,EAAJ,qBAAqBgC,GAAanD,GAFhE,QAEQQ,EAFR,QAGewB,IACLlC,EAAQU,EAASP,QAAQsF,IAAI,gBACnCrE,EAAS,CACPgB,KAAM,kBACNC,QAAS,CAAEgB,UAAWA,GACtBrD,MAAOA,KAEJS,EAAeC,GAVxB,4CARqC,kEAqBrC,WAAiC2C,GAAjC,qBAAA1C,EAAA,6DACQT,EAAUJ,EAAc,MAAOE,GADvC,SAEyBiC,MAAM,GAAD,OAAIZ,EAAJ,qBAAqBgC,GAAanD,GAFhE,YAEQQ,EAFR,QAGewB,GAHf,wBAIUlC,EAAQU,EAASP,QAAQsF,IAAI,gBAJvC,SAKyB/E,EAAST,OALlC,OAKUkC,EALV,OAMIf,EAAS,CACPgB,KAAM,iBACNC,QAASF,EAAOyD,QAChB5F,MAAOA,IAETsB,EAAS,cAAD,OAAe+B,IAX3B,wBAYS5C,EAAeC,GAZxB,6CArBqC,sBAoCrC,IAAMyJ,EAAehF,EACjBA,EAASY,KAAI,SAACH,GACZ,OAEE,cADA,CACA,gBACGA,EAAQxC,MACT,wBAAQ6B,QAAS,kBA1CU,2CA0CJmF,CAAkBxE,EAAQvC,YAAjD,kBAGA,wBAAQ4B,QAAS,kBA7CU,2CA6CJoF,CAAoBzE,EAAQvC,YAAnD,sBALOuC,EAAQvC,cAWrB,KAEJ,OACE,sBAAKd,GAAG,gBAAR,UACG4C,GAAY,oBAAI5C,GAAG,gBAAP,SAAwB4H,IACrC,cAACJ,EAAD,OCtDS,SAASO,IACtB,IAAMhJ,EAAWC,cACXC,EAAOP,aAAY,SAACC,GAAD,OAAWA,EAAMM,QAE1C,OACE,qCACE,cAAC,EAAD,IACA,sBAAKe,GAAG,gBAAR,UACE,iDACA,wBAAQ0C,QAAS,kBAAM3D,EAAS,SAAD,OAAUE,EAAKe,GAAf,eAA/B,yBAIF,cAAC,EAAD,OCfS,SAASgI,IACtB,IAAM/I,EAAOP,aAAY,SAACC,GAAD,OAAWA,EAAMM,QAC1C,EACET,IADF,mBAAOjB,EAAP,KAAsBsB,EAAtB,KAAgCX,EAAhC,KAAgDY,EAAhD,KAAsDrB,EAAtD,KAGA,EAAmDoF,oBAAS,GAA5D,mBAAOoF,EAAP,KAA0BC,EAA1B,KACA,EAAsCrF,mBAAS5D,EAAKkF,MAApD,mBAAOgE,EAAP,KAAoBC,EAApB,KACA,EAA6CvF,oBAAS,GAAtD,mBAAOwF,EAAP,KAAuBC,EAAvB,KACA,EAAgCzF,mBAAS5D,EAAKI,OAA9C,mBAAOkJ,EAAP,KAAiBC,EAAjB,KACA,EAAmD3F,oBAAS,GAA5D,mBAAO4F,EAAP,KAA0BC,EAA1B,KATqC,SAWtBC,EAXsB,8EAWrC,WAA4BxJ,GAA5B,qBAAAf,EAAA,6DACEe,EAAEC,iBACIzB,EAAUJ,EAAc,QAASE,EAAO,CAC5C0G,KAAMgE,IAHV,SAKyBzI,MAAM,GAAD,OAAIZ,EAAJ,WAAmBnB,GALjD,YAKQQ,EALR,QAMewB,GANf,wBAOUlC,EAAQU,EAASP,QAAQsF,IAAI,gBAPvC,SAQyB/E,EAAST,OARlC,OAQUkC,EARV,OASIsI,GAAsB,GACtBrJ,EAAS,CAAEgB,KAAM,eAAgBC,QAASF,EAAQnC,MAAOA,IACzDc,MAAM,iCAXV,wBAYSL,EAAeC,GAZxB,6CAXqC,+BA0BtByK,EA1BsB,8EA0BrC,WAAyBzJ,GAAzB,qBAAAf,EAAA,6DACEe,EAAEC,iBACIzB,EAAUJ,EAAc,QAASE,EAAO,CAC5C4B,MAAOkJ,IAHX,SAKyB7I,MAAM,GAAD,OAAIZ,EAAJ,WAAmBnB,GALjD,YAKQQ,EALR,QAMewB,GANf,wBAOUlC,EAAQU,EAASP,QAAQsF,IAAI,gBAPvC,SAQyB/E,EAAST,OARlC,OAQUkC,EARV,OASI0I,GAAmB,GACnBzJ,EAAS,CAAEgB,KAAM,eAAgBC,QAASF,EAAQnC,MAAOA,IACzDc,MAAM,iCAXV,wBAYSL,EAAeC,GAZxB,6CA1BqC,+BAyCtB0K,EAzCsB,8EAyCrC,WAA4B1J,GAA5B,yBAAAf,EAAA,yDACEe,EAAEC,iBACI0J,EAAcxJ,SAASC,eAAe,oBAAoBE,MAC1DsJ,EAAezJ,SAASC,eAAe,kBAAkBE,MACzDuJ,EAAe1J,SAASC,eAAe,kBAAkBE,MAC3DsJ,IAAiBC,EALvB,gBAMIzK,MAAM,8BANV,8BAQUZ,EAAUJ,EAAc,QAASE,EAAO,CAC5C4B,MAAOJ,EAAKI,MACZyJ,YAAaA,EACbG,YAAaF,IAXnB,UAa2BrJ,MAAM,GAAD,OAAIZ,EAAJ,UAAkBnB,GAblD,SAaUQ,EAbV,QAciBwB,IACLlC,EAAQU,EAASP,QAAQsF,IAAI,gBACnCwF,GAAsB,GACtB7J,EAAS,CAAEgB,KAAM,eAAgBC,QAAS,GAAIrC,MAAOA,IACrDc,MAAM,kCACDL,EAAeC,GAnB1B,6CAzCqC,kEAgErC,sBAAAC,EAAA,sDACEkB,SAASC,eAAe,oBAAoBE,MAAQ,GACpDH,SAASC,eAAe,kBAAkBE,MAAQ,GAClDH,SAASC,eAAe,kBAAkBE,MAAQ,GAClDiJ,GAAsB,GAJxB,4CAhEqC,sBAuErC,OACE,qCACE,4CACCT,EACC,uBAAM5H,SAAUsI,EAAhB,UACE,uBACE9I,KAAK,OACLJ,MAAO0I,EACPrD,SAAU,SAAC3F,GAAD,OAAOiJ,EAAejJ,EAAE4F,OAAOtF,UAE3C,wBAAQI,KAAK,SAAS6C,QAASiG,EAA/B,kBAGA,wBACE9I,KAAK,SACL6C,QAAS,WACPwF,GAAsB,GACtBE,EAAenJ,EAAKkF,OAJxB,uBAWF,qCACE,4BAAIlF,EAAKkF,OACT,wBAAQzB,QAAS,kBAAMwF,GAAsB,IAA7C,qBAGJ,gDACCG,EACC,uBAAMhI,SAAUuI,EAAhB,UACE,uBACE/I,KAAK,OACLJ,MAAO8I,EACPzD,SAAU,SAAC3F,GAAD,OAAOqJ,EAAYrJ,EAAE4F,OAAOtF,UAExC,wBAAQI,KAAK,SAAS6C,QAASkG,EAA/B,kBAGA,wBACE/I,KAAK,SACL6C,QAAS,WACP4F,GAAmB,GACnBE,EAAYvJ,EAAKI,QAJrB,uBAWF,qCACE,4BAAIJ,EAAKI,QACT,wBAAQqD,QAAS,kBAAM4F,GAAmB,IAA1C,qBAIJ,0CACCG,EACC,uBAAMpI,SAAUwI,EAAhB,UACE,kDACA,uBAAO7I,GAAG,mBAAmBH,KAAK,SAElC,oDACA,uBAAOG,GAAG,iBAAiBH,KAAK,SAEhC,uDACA,uBAAOG,GAAG,iBAAiBH,KAAK,SAEhC,wBAAQA,KAAK,SAAS6C,QAASmG,EAA/B,kBAGA,wBAAQhJ,KAAK,SAAS6C,QAAS,kBA/IF,0CA+IQwG,IAArC,uBAKF,wBAAQxG,QAAS,kBAAMgG,GAAsB,IAA7C,gCClJO,SAASX,IACtB,IAAMhJ,EAAWC,cACXC,EAAOP,aAAY,SAACC,GAAD,OAAWA,EAAMM,QAE1C,OACE,qCACE,cAAC,EAAD,IACA,sBAAKe,GAAG,gBAAR,UACE,wBAAQ0C,QAAS,kBAAM3D,EAAS,SAAD,OAAUE,EAAKe,GAAf,eAA/B,yBAGA,sDAEF,cAACgI,EAAD,OCrBN,IAYemB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCLRQ,EAAe,CACnB9I,UAAW,KACXD,MAAO,GACPwE,OAAQ,ICHV,IAAMuE,EAAe,GCGrB,IAAMC,EAAcC,0BAAgB,CAClCzG,QFEa,WAA2D,IAAnC0G,EAAkC,uDAAtBH,EAAcI,EAAQ,uCACnErL,EAAK,eAAQoL,GACXjK,EAAUkK,EAAOlK,QASvB,QAPEkK,EAAOnK,KAAKoK,WAAW,YACvBD,EAAOnK,KAAKoK,WAAW,UACvBD,EAAOnK,KAAKoK,WAAW,UAEvB9G,QAAQC,IAAItD,GAGNkK,EAAOnK,MAEb,IAAK,wBAEH,OADAlB,EAAM0G,OAASvF,EACRnB,EAET,IAAK,kBAIH,OAHKA,EAAMmC,YACTnC,EAAQmB,GAEHnB,EAET,IAAK,iBAEH,OADAA,EAAQmB,EAGV,IAAK,mBAiEL,IAAK,iBACH,OAAO8J,EA/DT,IAAK,kBAEH,OAAI9J,EAAQgB,YAAcnC,EAAMmC,UACvB8I,EAEFjL,EAIT,IAAK,gBAEH,OADAA,EAAM0G,OAAS1G,EAAM0G,OAAO6E,OAAOpK,GAC5BnB,EAET,IAAK,gBACH,IAAMiC,EAAQjC,EAAM0G,OAAO8E,WACzB,SAAC7D,GAAD,OAAWA,EAAM9B,UAAY1E,EAAQ0E,WAGvC,OADA7F,EAAM0G,OAAOzE,GAASd,EACfnB,EAET,IAAK,gBAIH,OAHAA,EAAM0G,OAAS1G,EAAM0G,OAAO+E,QAC1B,SAAC9D,GAAD,OAAWA,EAAM9B,UAAY1E,EAAQ0E,WAEhC7F,EAIT,IAAK,eAEH,IAAM2H,EAAQ3H,EAAM0G,OAAOgF,MACzB,SAAC/D,GAAD,OAAWA,EAAM9B,UAAY1E,EAAQ0E,WAIvC,OADA8B,EAAMhB,MAAQgB,EAAMhB,MAAM4E,OAAOpK,EAAQsF,MAClCzG,EAET,IAAK,eAEH,IAAM2H,EAAQ3H,EAAM0G,OAAOgF,MACzB,SAAC/D,GAAD,OAAWA,EAAM9B,UAAY1E,EAAQ0E,WAMvC,OAHA8B,EAAMhB,MAAQgB,EAAMhB,MAAM8E,QACxB,SAAChF,GAAD,OAAUA,EAAKH,SAAWnF,EAAQmF,UAE7BtG,EAET,IAAK,eAEH,IAAMwG,EAAaxG,EAAM0G,OAAO8E,WAC9B,SAAC7D,GAAD,OAAWA,EAAM9B,UAAY1E,EAAQ0E,WAGjCU,EAAYvG,EAAM0G,OAAOF,GAAYG,MAAM6E,WAC/C,SAAC/E,GAAD,OAAUA,EAAKH,SAAWnF,EAAQsF,KAAKH,UAGzC,OADAtG,EAAM0G,OAAOF,GAAYG,MAAMJ,GAAapF,EAAQsF,KAC7CzG,EAST,QACE,OAAOoL,IEnGX9K,KDHa,WAAwD,IAAnC8K,EAAkC,uDAAtBH,EAAcI,EAAQ,uCAChErL,EAAK,eAAQoL,GACXjK,EAAUkK,EAAOlK,QAEvB,OAAQkK,EAAOnK,MACb,IAAK,eAGH,OAFAlB,EAAQmB,GACFwK,KAAO,qBACN3L,EAET,IAAK,gBAGH,OAFAA,EAAQmB,GACFwK,KAAO,YACN3L,EAET,IAAK,iBAEH,OADAA,EAAQ,CAAE2L,KAAM,cAGlB,IAAK,eAEH,OADA3L,EAAQ,CAAE2L,KAAM,WAGlB,IAAK,eAOH,OANIxK,EAAQqE,OACVxF,EAAMwF,KAAOrE,EAAQqE,MAEnBrE,EAAQT,QACVV,EAAMU,MAAQS,EAAQT,OAEjBV,EAET,IAAK,uBAIH,OADAA,EAAMiE,SAAW9C,EACVnB,EAET,IAAK,kBAMH,OAJAA,EAAMiE,SAAWjE,EAAMiE,SAASsH,OAAO,CACrCrJ,MAAOf,EAAQe,MACfC,UAAWhB,EAAQgB,YAEdnC,EAET,IAAK,kBAKH,OAHAA,EAAMiE,SAAWjE,EAAMiE,SAASwH,QAC9B,SAAC/G,GAAD,OAAaA,EAAQvC,YAAchB,EAAQgB,aAEtCnC,EAET,QACE,OAAOoL,IClDXtM,MCLa,WAAwD,IAAnCsM,EAAkC,uDAFjD,GAEyCC,EAAQ,uCACpE,OAAIA,EAAOvM,MACFuM,EAAOvM,MAEI,mBAAhBuM,EAAOnK,KANQ,GASZkK,KDCMF,I,OEMfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOC,sBAAYd,GAA7B,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOe,KAAK,IAAIC,QAAS,cAAC,IAAD,IAAzB,UACE,cAAC,IAAD,CAAOjK,OAAK,EAACiK,QAAS,cAACjM,EAAD,MACtB,cAAC,IAAD,CAAOgM,KAAK,SAASC,QAAS,cAACzD,EAAD,MAC9B,cAAC,IAAD,CAAOwD,KAAK,SAASC,QAAS,cAACrK,EAAD,MAC9B,cAAC,IAAD,CAAOoK,KAAK,gBAAgBC,QAAS,cAAC3D,EAAD,MACrC,cAAC,IAAD,CACE0D,KAAK,wBACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,wBACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC9D,EAAD,MAC1C,cAAC,IAAD,CAAO6D,KAAK,iBAAiBC,QAAS,cAACtD,EAAD,MACtC,cAAC,IAAD,CAAOqD,KAAK,IAAIC,QAAS,cAACjM,EAAD,iBAMnCU,SAASC,eAAe,SAM1B4J,K","file":"static/js/main.cc152377.chunk.js","sourcesContent":["/********************* FOR DEVELOPMENT ONLY. *************************/\r\n/* Basically a client-side environmental variable holding URL of API */\r\n/* In production, this can be replaced with a constant */\r\n\r\nexport const apiDomain =\r\n  window.location.hostname === \"localhost\"\r\n    ? \"http://localhost:5000\"\r\n    : \"https://taskflow.herokuapp.com\";\r\n","/* Creates API requests */\r\n/* This creates any request for which auth is needed */\r\n\r\nexport default function createRequest(method, token, json) {\r\n  const request = {\r\n    method: method,\r\n    headers: {\r\n      Authorization: token,\r\n      cache: \"no-store\",\r\n    },\r\n  };\r\n\r\n  if (json) {\r\n    request.headers[\"Content-Type\"] = \"application/json\";\r\n    request.body = JSON.stringify(json);\r\n  }\r\n\r\n  return request;\r\n}\r\n","export default async function handleApiError(response) {\r\n  const message =\r\n    (await response.text()) ||\r\n    \"Unknown Error. Please try again or contact the site administrator.\";\r\n  alert(`Error: ${message}`);\r\n}\r\n","/* This file consolidates boilerplate code for API requests */\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { apiDomain } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\nimport handleApiError from \"../utils/handleApiError\";\r\n\r\nexport default function useRequestTools() {\r\n  const dispatch = useDispatch();\r\n  const PATH = `${apiDomain}/api`; // The path to the server API\r\n  const token = useSelector((state) => state.token);\r\n\r\n  return [createRequest, dispatch, handleApiError, PATH, token];\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport useRequestTools from \"../../hooks/useRequestTools\";\r\n\r\nexport default function HomePage() {\r\n  const [createRequest, dispatch, handleApiError, PATH] = useRequestTools();\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user, shallowEqual);\r\n\r\n  /* Upon login navigate to user page */\r\n  useEffect(() => {\r\n    if (user.id) navigate(`../user/${user.id}`);\r\n  }, [user.id, navigate]);\r\n\r\n  async function handleLogin(e) {\r\n    e.preventDefault();\r\n    const email = document.getElementById(\"user-email\");\r\n    const password = document.getElementById(\"user-password\");\r\n\r\n    const request = createRequest(\"POST\", null, {\r\n      email: email.value,\r\n      password: password.value,\r\n    });\r\n\r\n    const response = await fetch(`${PATH}/users/login`, request);\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: \"user/loggedIn\",\r\n        payload: result.user,\r\n        token: result.token,\r\n      });\r\n      // navigate(`../user/${user.id}`);\r\n    } else handleApiError(response);\r\n\r\n    email.value = \"\"; // reset credential fields\r\n    password.value = \"\";\r\n  }\r\n\r\n  return (\r\n    <main className=\"single\">\r\n      <img className=\"logo\" alt=\"Taskflow.tech\" src=\"/logo.png\" />\r\n      <h1>\r\n        <a href=\"/\">Taskflow.tech</a>\r\n      </h1>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input id=\"user-email\" type=\"text\" placeholder=\"E-mail\" />\r\n        <input id=\"user-password\" type=\"password\" placeholder=\"Password\" />\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n      <h3>\r\n        <Link to=\"/signup\">Sign Up</Link>\r\n      </h3>\r\n    </main>\r\n  );\r\n}\r\n","/* Just a splash screen informing user they have been logged out */\r\n/* Redirects to homepage after timeout */\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function LogoutPage() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      navigate(\"/\");\r\n    }, 1500);\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <main className=\"single\">\r\n      <img className=\"logo\" alt=\"Taskflow.tech\" src=\"/logo.png\" />\r\n      <h1>\r\n        <a href=\"/\">Taskflow.tech</a>\r\n      </h1>\r\n      <h2>You have been logged out and will be redirected.</h2>\r\n    </main>\r\n  );\r\n}\r\n","export const ItemTypes = {\r\n  PROJECTTAB: \"projectTab\",\r\n  STAGE: \"stage\",\r\n  //TODO: add item\r\n};\r\n","/* A tab that lists a projects's title. */\r\n/* These tabs implement Drag and Drop horizontally */\r\n\r\nimport { useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"../utils/itemTypes\";\r\n\r\nexport default function ProjectTab({\r\n  index,\r\n  title,\r\n  projectId,\r\n  reorderProjects,\r\n  loadProject,\r\n}) {\r\n  const ref = useRef(null);\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.PROJECTTAB,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      // The source index where item is being dragged from\r\n      const sourceIndex = item.index;\r\n      // Index of current hover position\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (sourceIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get horizontal middle\r\n      const hoverMiddleX =\r\n        (hoverBoundingRect.right - hoverBoundingRect.left) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientX = clientOffset.x - hoverBoundingRect.left;\r\n      //Only perform the move when the mouse has crossed half of the item's height\r\n      // When dragging leftwards, only move when the cursor is left of 50%\r\n      // When dragging downwards, only move when the cursor is above 50%\r\n      if (sourceIndex < hoverIndex && hoverClientX < hoverMiddleX) {\r\n        return;\r\n      }\r\n      if (sourceIndex > hoverIndex && hoverClientX > hoverMiddleX) {\r\n        return;\r\n      }\r\n      reorderProjects(sourceIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: ItemTypes.PROJECTTAB,\r\n    item: () => {\r\n      return { title, index };\r\n    },\r\n    collect: (monitor) => {\r\n      return { isDragging: monitor.isDragging() };\r\n    },\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  drag(drop(ref));\r\n\r\n  return (\r\n    <li ref={ref} style={{ opacity }}>\r\n      <button className=\"btn\" onClick={() => loadProject(projectId)}>\r\n        {title}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import { useCallback, useState } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\nimport \"../styles/Navbar.css\";\r\nimport ProjectTab from \"./ProjectTab\";\r\n\r\nexport default function NavPane() {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const navigate = useNavigate();\r\n  const projects = useSelector((state) => state.user.projects, shallowEqual);\r\n  const [creatorIsOpen, toggleCreatorOpen] = useState(false);\r\n\r\n  const handleCreateProject = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // TODO add blank title error handling\r\n      const request = createRequest(\"POST\", token, {\r\n        title: `${document.getElementById(\"new-project-title\").value}`,\r\n      });\r\n      const response = await fetch(`${PATH}/projects/`, request);\r\n      if (response.ok) {\r\n        const token = response.headers.get(\"X-Auth-Token\");\r\n        const result = await response.json();\r\n        console.log(response); // DELETE ME\r\n        dispatch({\r\n          type: \"project/created\",\r\n          payload: result.project,\r\n          token: token,\r\n        });\r\n        toggleCreatorOpen(false);\r\n      } else handleApiError(response);\r\n    },\r\n    [token, createRequest, dispatch, handleApiError, PATH]\r\n  );\r\n\r\n  const loadProject = useCallback(\r\n    async (projectId) => {\r\n      const request = createRequest(\"GET\", token);\r\n      const response = await fetch(`${PATH}/projects/${projectId}`, request);\r\n      if (response.ok) {\r\n        const token = response.headers.get(\"X-Auth-Token\");\r\n        const result = await response.json();\r\n        console.log(response); // DELETE ME\r\n        dispatch({\r\n          type: \"project/loaded\",\r\n          payload: result.project,\r\n          token: token,\r\n        });\r\n        navigate(`../project/${projectId}`);\r\n      } else handleApiError(response);\r\n    },\r\n    [token, createRequest, dispatch, handleApiError, PATH, navigate]\r\n  );\r\n\r\n  /* reorder projects */\r\n  const reorderProjects = useCallback(\r\n    async (sourceIndex, hoverIndex) => {\r\n      if (!token) return; // abort if user logged out\r\n      const newProjects = [...projects]; // copy state for mutations\r\n      newProjects.splice(hoverIndex, 0, newProjects.splice(sourceIndex, 1)[0]);\r\n\r\n      /* dispatch reorder to redux state */\r\n      dispatch({ type: \"user/reorderProjects\", payload: newProjects });\r\n\r\n      /* send API request */\r\n      const request = createRequest(\"PATCH\", token, {\r\n        projects: newProjects.map((project) => project.projectId),\r\n      });\r\n      const response = await fetch(`${PATH}/users/`, request);\r\n      if (response.ok) {\r\n        const token = response.headers.get(\"X-Auth-Token\");\r\n        if (token) dispatch({ type: \"token/refresh\", token: token });\r\n      } else handleApiError(response);\r\n    },\r\n    [projects, token, createRequest, dispatch, handleApiError, PATH]\r\n  );\r\n\r\n  const renderProjectTab = useCallback(\r\n    (index, title, projectId) => {\r\n      return (\r\n        <ProjectTab\r\n          key={projectId}\r\n          index={index}\r\n          title={title}\r\n          projectId={projectId}\r\n          reorderProjects={reorderProjects}\r\n          loadProject={loadProject}\r\n        />\r\n      );\r\n    },\r\n    [reorderProjects, loadProject]\r\n  );\r\n\r\n  const createProject = creatorIsOpen ? ( // TODO: break into separate components\r\n    <div className=\"overlay\">\r\n      <div className=\"overlay-inner\">\r\n        <form id=\"new-project-creator\" onSubmit={handleCreateProject}>\r\n          <label htmlFor=\"new-project-title\">New Project:</label>\r\n          <input id=\"new-project-title\" />\r\n          <div className=\"two-button mt-2\">\r\n            <button id=\"submit\">Create Project</button>\r\n            <button\r\n              className=\"btn-close-task-creator ml-1\"\r\n              onClick={() => toggleCreatorOpen(false)}\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <li className=\"add-project\">\r\n      <button onClick={() => toggleCreatorOpen(true)} title=\"Add new project\">\r\n        <svg\r\n          height=\"16\"\r\n          viewBox=\"0 0 16 16\"\r\n          version=\"1.1\"\r\n          width=\"16\"\r\n          data-view-component=\"true\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M7.75 2a.75.75 0 01.75.75V7h4.25a.75.75 0 110 1.5H8.5v4.25a.75.75 0 11-1.5 0V8.5H2.75a.75.75 0 010-1.5H7V2.75A.75.75 0 017.75 2z\"\r\n          ></path>\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <nav id=\"navbar\">\r\n      <ul className=\"tabrow\">\r\n        {projects?.map((project, index) =>\r\n          renderProjectTab(index, project.title, project.projectId)\r\n        )}\r\n        {createProject}\r\n      </ul>\r\n      <br />\r\n    </nav>\r\n  );\r\n}\r\n","/* This component displays user.name and a logout button if */\r\n/* user is logged in, and a login link otherwise */\r\n/* This is meant as a subcomponent of PageHeader */\r\n\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\nimport \"../styles/UserTab.css\";\r\n\r\nexport default function UserTab() {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user, shallowEqual); // TODO: remove shallowequal\r\n\r\n  /* navigate to user page on click */\r\n  function handleNavUserPanel(e) {\r\n    e.preventDefault();\r\n    dispatch({ type: \"project/unloaded\" });\r\n    navigate(`/user/${user.id}`);\r\n  }\r\n\r\n  async function logoutUser() {\r\n    const request = createRequest(\"POST\", token);\r\n    const response = await fetch(`${PATH}/users/logout`, request);\r\n    if (!response.ok) handleApiError(response);\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: \"user/loggedOut\" });\r\n    }, 500);\r\n  }\r\n\r\n  if (user.id) {\r\n    return (\r\n      <div id=\"user-tab\">\r\n        <button id=\"btn-user-name\" onClick={handleNavUserPanel}>\r\n          {user.name || \"Anonymous User\"}\r\n        </button>\r\n        <div id=\"user-panel\">\r\n          <button onClick={() => navigate(`/user/${user.id}/settings`)}>\r\n            Settings\r\n          </button>\r\n          <button onClick={() => navigate(`/user/${user.id}/projects`)}>\r\n            My Projects\r\n          </button>\r\n\r\n          <button onClick={() => logoutUser()} id=\"btn-logout\">\r\n            Log Out\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div id=\"user-tab\">\r\n        <Link to=\"login\" id=\"btn-login\">\r\n          Log In\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import useLogout from \"../hooks/useLogout\";\r\nimport \"../styles/PageHeader.css\";\r\nimport UserTab from \"./UserTab\";\r\n\r\nexport default function PageHeader() {\r\n  useLogout();\r\n\r\n  return (\r\n    <header id=\"page-header\">\r\n      <div id=\"app-title\">\r\n        <img className=\"logo\" alt=\"logo\" src=\"/logo-smol.png\" />\r\n      </div>\r\n      <UserTab />\r\n    </header>\r\n  );\r\n}\r\n","/* This hook ensures any components using it are only accessible */\r\n/* while user is signed in */\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function useLogout() {\r\n  const token = useSelector((state) => state.token);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate(\"../logout\");\r\n    }\r\n\r\n    // TODO: implement token expiration UI handling\r\n  }, [token, navigate]);\r\n}\r\n","import { useState } from \"react\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\nimport \"../styles/TaskCreator.css\";\r\n\r\nexport default function StageEditor({ stageId }) {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const [open, toggleOpen] = useState(false); // toggle editor open or closed\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n\r\n  // TODO: implement closeStageEditor\r\n\r\n  async function handleEditStageName(e) {\r\n    e.preventDefault();\r\n    const request = createRequest(\"PATCH\", token, {\r\n      title: newTitle,\r\n    });\r\n    const response = await fetch(`${PATH}/stages/${stageId}`, request);\r\n    if (response.ok) {\r\n      toggleOpen(false); // close editor\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      dispatch({ type: \"stage/updated\", payload: result, token: token });\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  return open ? ( // display editor if open == true\r\n    <div className=\"overlay\">\r\n      <div className=\"overlay-inner\">\r\n        <form className=\"stage-rename\" onSubmit={handleEditStageName}>\r\n          <label htmlFor=\"rename\">Rename Stage:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"rename\"\r\n            maxLength=\"30\"\r\n            value={newTitle}\r\n            onChange={(e) => setNewTitle(e.target.value)}\r\n          />\r\n          <div className=\"two-button mt-2\">\r\n            <button className=\"btn-stage-rename mr-1\" type=\"submit\">\r\n              Rename\r\n            </button>\r\n            <button\r\n              className=\"btn-close-stage-rename ml-1\"\r\n              onClick={() => toggleOpen(false)}\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    // display button if open == false\r\n    <button className=\"btn\" onClick={() => toggleOpen(true)}>\r\n      Rename Stage\r\n    </button>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\nimport \"../styles/Task.css\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\n\r\nexport default function TaskCard({ taskId, taskIndex, stageId, stageIndex }) {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const task = useSelector(\r\n    (state) => state.project.stages[stageIndex].tasks[taskIndex]\r\n  );\r\n\r\n  const [isEditing, toggleEditing] = useState(false);\r\n  const [newTitle, setNewTitle] = useState(task.title);\r\n  const [newDetails, setNewDetails] = useState(task.details);\r\n\r\n  /* cancel edits to task and stop editing */\r\n  function cancelEditTask() {\r\n    setNewTitle(task.title); // reset title according to redux state\r\n    setNewDetails(task.details);\r\n    toggleEditing(false);\r\n  }\r\n\r\n  async function editTask() {\r\n    const request = createRequest(\"PATCH\", token, {\r\n      title: newTitle,\r\n      details: newDetails,\r\n    });\r\n    const response = await fetch(\r\n      `${PATH}/stages/${stageId}/tasks/${taskId}`,\r\n      request\r\n    );\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: \"task/updated\",\r\n        payload: { stageId: stageId, task: result },\r\n        token: token,\r\n      });\r\n      toggleEditing(false);\r\n    } else handleApiError(response);\r\n    toggleEditing(false);\r\n  }\r\n\r\n  async function deleteTask() {\r\n    const request = createRequest(\"DELETE\", token);\r\n    const response = await fetch(\r\n      `${URL}/api/stages/${stageId}/tasks/${taskId}`,\r\n      request\r\n    );\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      dispatch({\r\n        type: \"task/deleted\",\r\n        payload: { stageId: stageId, taskId: taskId },\r\n        token: token,\r\n      });\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  const titleBar = isEditing ? ( // if isEditing true\r\n    <div className=\"task-title-bar\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"task-title-editor\"\r\n        placeholder={task.title}\r\n        onChange={(e) => setNewTitle(e.target.value)}\r\n      />\r\n      <div>\r\n        <button className=\"btn-cancel-edit-task\" onClick={cancelEditTask}>\r\n          🚫\r\n        </button>\r\n        <button className=\"btn-save-task\" onClick={editTask}>\r\n          💾\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    // if isEditing is false\r\n    <div className=\"task-title-bar\">\r\n      <p className=\"task-title\">{task.title}</p>\r\n      <button className=\"btn-edit-task\" onClick={() => toggleEditing(true)}>\r\n        ✏️\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  const details = isEditing ? (\r\n    <textarea\r\n      className=\"task-details\"\r\n      name=\"task-details\"\r\n      rows=\"4\"\r\n      value={newDetails}\r\n      onChange={(e) => setNewDetails(e.target.value)}\r\n    ></textarea>\r\n  ) : (\r\n    <form>\r\n      {task.details && <hr />}\r\n      <p className=\"task-details\">{task.details}</p>\r\n    </form>\r\n  );\r\n\r\n  const taskOptions = isEditing && (\r\n    <>\r\n      <hr />\r\n      <div className=\"task-options\">\r\n        <button className=\"btn-delete-task\" onClick={() => deleteTask()}>\r\n          🗑️ Delete Task\r\n        </button>\r\n        <button className=\"btn-complete-task\" onClick={() => deleteTask()}>\r\n          ✔️ Mark Complete\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"task-card\">\r\n      {titleBar}\r\n      {details}\r\n      {taskOptions}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\n\r\nexport default function TaskCreator({ stageId }) {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const [open, toggleOpen] = useState(false); // if the creator is open or not\r\n  const [title, setTitle] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n\r\n  async function handleCreateTask(e) {\r\n    e.preventDefault();\r\n    // const titleField = e.target.querySelector(\".new-task-title\");\r\n    const request = createRequest(\"POST\", token, {\r\n      title: title,\r\n      details: details,\r\n    });\r\n    const response = await fetch(`${PATH}/stages/${stageId}/tasks`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: \"task/created\",\r\n        payload: { task: result, stageId: stageId },\r\n        token: token,\r\n      });\r\n      toggleOpen(false); // close task creator\r\n      setTitle(\"\"); // reset title field\r\n      setDetails(\"\"); // reset details field\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  /*  TODO: add disabled=\"\" to Create Task button\r\n            requires js to remove if content in text area */\r\n\r\n  return open ? (\r\n    <div className=\"task-creator\">\r\n      <form onSubmit={handleCreateTask}>\r\n        <textarea\r\n          className=\"new-task-title\"\r\n          placeholder=\"Enter a task\"\r\n          maxLength=\"31\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          className=\"new-task-details\"\r\n          placeholder=\"Enter details (optional)\"\r\n          maxLength=\"500\"\r\n          value={details}\r\n          onChange={(e) => setDetails(e.target.value)}\r\n        />\r\n        <div className=\"two-button mt-2\">\r\n          <button className=\"btn-create-task mr-1\" type=\"submit\">\r\n            Create Task\r\n          </button>\r\n          <button\r\n            className=\"btn-close-task-creator ml-1\"\r\n            onClick={() => toggleOpen(false)}\r\n            type=\"button\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  ) : (\r\n    <div className=\"task-creator float-right\">\r\n      <button\r\n        className=\"btn-open-task-creator\"\r\n        onClick={() => toggleOpen(true)}\r\n      >\r\n        <svg\r\n          height=\"16\"\r\n          viewBox=\"0 0 16 16\"\r\n          version=\"1.1\"\r\n          width=\"16\"\r\n          data-view-component=\"true\"\r\n          className=\"mr-2\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M7.75 2a.75.75 0 01.75.75V7h4.25a.75.75 0 110 1.5H8.5v4.25a.75.75 0 11-1.5 0V8.5H2.75a.75.75 0 010-1.5H7V2.75A.75.75 0 017.75 2z\"\r\n          ></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","/* A stage of a project. */\r\n/* These stages implement Drag and Drop horizontally*/\r\n\r\nimport { useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\nimport \"../styles/Stage.css\";\r\nimport { ItemTypes } from \"../utils/itemTypes\";\r\nimport StageEditor from \"./StageEditor\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport TaskCreator from \"./TaskCreator\";\r\n\r\nexport default function Stage({ stageId, stageIndex, title, reorderStages }) {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const ref = useRef(null);\r\n  const stage = useSelector((state) => state.project.stages[stageIndex]);\r\n  const tasks = useSelector(\r\n    (state) => state.project.stages[stageIndex].tasks,\r\n    shallowEqual\r\n  );\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.STAGE, //change PROJECT to PROJECTTAB\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      // The source index where item is being dragged from\r\n      const sourceIndex = item.index;\r\n      // Index of current hover position\r\n      const hoverIndex = stageIndex;\r\n      // Don't replace items with themselves\r\n      if (sourceIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get horizontal middle\r\n      const hoverMiddleX =\r\n        (hoverBoundingRect.right - hoverBoundingRect.left) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientX = clientOffset.x - hoverBoundingRect.left;\r\n      //Only perform the move when the mouse has crossed half of the item's height\r\n      // When dragging leftwards, only move when the cursor is left of 50%\r\n      // When dragging downwards, only move when the cursor is above 50%\r\n      if (sourceIndex < hoverIndex && hoverClientX < hoverMiddleX) {\r\n        return;\r\n      }\r\n      if (sourceIndex > hoverIndex && hoverClientX > hoverMiddleX) {\r\n        return;\r\n      }\r\n      reorderStages(sourceIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: ItemTypes.STAGE,\r\n    item: () => {\r\n      return { title, stageIndex };\r\n    },\r\n    collect: (monitor) => {\r\n      return { isDragging: monitor.isDragging() };\r\n    },\r\n  });\r\n\r\n  // const opacity = isDragging ? 0 : 1; // TODO: change from css toggle to react\r\n\r\n  drag(drop(ref));\r\n\r\n  async function handleDeleteStage(stageId) {\r\n    const request = createRequest(\"DELETE\", token);\r\n    const response = await fetch(`${PATH}/stages/${stageId}`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      dispatch({\r\n        type: \"stage/deleted\",\r\n        payload: { stageId: stageId },\r\n        token: token,\r\n      });\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  const taskList = tasks\r\n    ? tasks.map((task, index) => {\r\n        return (\r\n          <TaskCard\r\n            key={task.taskId}\r\n            taskId={task.taskId}\r\n            taskIndex={index}\r\n            stageId={stageId}\r\n            stageIndex={stageIndex}\r\n          />\r\n        );\r\n      })\r\n    : null;\r\n\r\n  return (\r\n    <section className=\"stage\" key={stageId} ref={ref}>\r\n      <div className=\"stage-header\">\r\n        <details className=\"dropdown\">\r\n          {\" \"}\r\n          {/*TODO: change from css toggle to react toggle */}\r\n          <summary className=\"\" role=\"button\">\r\n            <h3 className=\"stage-title\">{stage.title}</h3>\r\n            <svg\r\n              height=\"16\"\r\n              viewBox=\"0 0 16 16\"\r\n              version=\"1.1\"\r\n              width=\"16\"\r\n              data-view-component=\"true\"\r\n              className=\"float-right\"\r\n            >\r\n              <path d=\"M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\"></path>\r\n            </svg>\r\n            <TaskCreator stageId={stageId} stageIndex={stageIndex} />\r\n          </summary>\r\n          <span className=\"dropdown-content mt-4\">\r\n            <ul>\r\n              <li>\r\n                <StageEditor stageId={stageId} />\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => handleDeleteStage(stageId)}\r\n                >\r\n                  Delete Stage\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </span>\r\n        </details>\r\n      </div>\r\n      {taskList}\r\n    </section>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\n\r\nexport default function StageCreator({ projectId }) {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const [open, toggleOpen] = useState(false); // toggle creator open or closed\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n\r\n  async function handleCreateStage(e) {\r\n    e.preventDefault();\r\n    const request = createRequest(\"POST\", token, {\r\n      title: newTitle,\r\n      projectId: projectId,\r\n    });\r\n    const response = await fetch(`${PATH}/stages`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: \"stage/created\",\r\n        payload: result,\r\n        token: token,\r\n      });\r\n      toggleOpen(false);\r\n      setNewTitle(\"\"); // reset new title field\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  return open ? (\r\n    <div className=\"overlay\">\r\n      <div className=\"overlay-inner\">\r\n        <form onSubmit={handleCreateStage}>\r\n          <label htmlFor=\"new-stage-title\">Create Stage:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"new-stage-title\"\r\n            value={newTitle}\r\n            maxLength=\"29\"\r\n            required\r\n            onChange={(e) => setNewTitle(e.target.value)}\r\n          ></input>\r\n          <div className=\"two-button mt-2\">\r\n            <button className=\"btn-create-stage\" type=\"submit\">\r\n              Create Stage\r\n            </button>\r\n            <button\r\n              className=\"btn-toggle-stage-creator\"\r\n              onClick={() => toggleOpen(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <section className=\"stage create\">\r\n      <button className=\"btn\" onClick={() => toggleOpen(true)}>\r\n        Create Stage\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n","/* A board representing a project filled with stages. */\r\n\r\nimport { useCallback } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\nimport \"../styles/ProjectBoard.css\";\r\nimport Stage from \"./Stage\";\r\nimport StageCreator from \"./StageCreator\";\r\n\r\nexport default function ProjectBoard() {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const projectId = useSelector((state) => state.project.projectId);\r\n  const stages = useSelector((state) => state.project.stages, shallowEqual);\r\n\r\n  /* Reorder stages */\r\n  const reorderStages = useCallback(\r\n    async (sourceIndex, hoverIndex) => {\r\n      if (!token) return; // abort if user logged out\r\n      const newStages = [...stages]; // copy state for mutations\r\n      newStages.splice(hoverIndex, 0, newStages.splice(sourceIndex, 1)[0]);\r\n\r\n      /* dispatch reorder to redux state */\r\n      dispatch({ type: \"project/reorderStages\", payload: newStages });\r\n\r\n      /* send API request */\r\n      const request = createRequest(\"PATCH\", token, {\r\n        stages: newStages.map((stage) => stage.stageId), // send array of stageIds\r\n      });\r\n      const response = await fetch(`${PATH}/projects/${projectId}`, request);\r\n      if (response.ok) {\r\n        const token = response.headers.get(\"X-Auth-Token\");\r\n        if (token) dispatch({ type: \"token/refresh\", token: token });\r\n      } else handleApiError(response);\r\n    },\r\n    [stages, token, projectId, createRequest, dispatch, handleApiError, PATH]\r\n  );\r\n\r\n  const stageList = stages?.map((stage, index) => (\r\n    <Stage\r\n      key={stage.stageId}\r\n      stageId={stage.stageId}\r\n      stageIndex={index}\r\n      title={stage.title}\r\n      reorderStages={reorderStages}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div id=\"project-board\">\r\n      {stageList}\r\n      {/* {stages?.map((stage, index) =>\r\n        renderStage(stage.stageId, index, stage.title)\r\n      )} */}\r\n      <StageCreator projectId={projectId} />\r\n    </div>\r\n  );\r\n}\r\n","/* Main Component displays either project interface or project selection menu */\r\n\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport Navbar from \"../Navbar\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport ProjectBoard from \"../ProjectBoard\";\r\n\r\nexport default function ProjectPage() {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <PageHeader />\r\n      <Navbar />\r\n      <main>\r\n        <ProjectBoard />\r\n      </main>\r\n    </DndProvider>\r\n  );\r\n}\r\n","/* Redirects from taskflow.tech/user/userId */\r\n/* to taskflow.tech/user/userId/projects */\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport default function Redirect() {\r\n  return <Navigate to=\"projects\" replace />;\r\n}\r\n","/* This page lets users sign up */\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport useRequestTools from \"../../hooks/useRequestTools\";\r\n\r\nexport default function SignupPage() {\r\n  const [createRequest, dispatch, handleApiError, PATH] = useRequestTools();\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  /* Upon signup navigate to the user page */\r\n  useEffect(() => {\r\n    if (user.id) {\r\n      navigate(`../user/${user.id}`);\r\n    }\r\n  }, [user.id, navigate]);\r\n\r\n  async function handleSignup(e) {\r\n    e.preventDefault();\r\n    const name = document.getElementById(\"user-name\");\r\n    const email = document.getElementById(\"user-email\");\r\n    const password1 = document.getElementById(\"user-password-1\");\r\n    const password2 = document.getElementById(\"user-password-2\");\r\n\r\n    if (password1.value !== password2.value) {\r\n      alert(\"Passwords do not match. Try again.\");\r\n      password1.value = \"\";\r\n      password2.value = \"\";\r\n      return;\r\n    }\r\n\r\n    const request = createRequest(\"POST\", null, {\r\n      name: name.value,\r\n      email: email.value,\r\n      password: password1.value,\r\n    });\r\n\r\n    const response = await fetch(`${PATH}/users`, request);\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: \"user/created\",\r\n        payload: result.user,\r\n        token: result.token,\r\n      });\r\n      alert(`User created: \\nName: ${name.value}\\nEmail: ${email.value}`);\r\n    } else handleApiError(response);\r\n\r\n    name.value = \"\"; // reset credential fields\r\n    email.value = \"\";\r\n    password1.value = \"\";\r\n    password2.value = \"\";\r\n  }\r\n\r\n  return !user.id ? (\r\n    <main className=\"single\">\r\n      <img className=\"logo\" alt=\"Taskflow.tech\" src=\"/logo.png\" />\r\n      <h1>\r\n        <a href=\"/\">Taskflow.tech</a>\r\n      </h1>\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSignup}>\r\n        <input id=\"user-name\" type=\"text\" placeholder=\"User Name\" />\r\n        <input id=\"user-email\" type=\"text\" placeholder=\"Email Address\" />\r\n        <input id=\"user-password-1\" type=\"password\" placeholder=\"Password\" />\r\n        <input\r\n          id=\"user-password-2\"\r\n          type=\"password\"\r\n          placeholder=\"Re-type password\"\r\n        />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      <h3>\r\n        <Link to=\"/\">Log In</Link>\r\n      </h3>\r\n    </main>\r\n  ) : (\r\n    <h1>User is logged in</h1>\r\n  );\r\n}\r\n","export default function UnsavedProjectPage() {\r\n  return <h1>Unsaved Project</h1>;\r\n}\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\n\r\nexport default function NewProjectCreator() {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const navigate = useNavigate();\r\n  const [isActive, toggleActive] = useState(false); // if creator is active\r\n\r\n  async function handleCreateProject(e) {\r\n    e.preventDefault();\r\n    // TODO add blank title error handling\r\n    const request = createRequest(\"POST\", token, {\r\n      title: `${document.getElementById(\"new-project-title\").value}`,\r\n    });\r\n    const response = await fetch(`${PATH}/projects/`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      await dispatch({\r\n        type: \"project/created\",\r\n        payload: result.project,\r\n        token: token,\r\n      });\r\n      navigate(`../project/${result.project.projectId}`);\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  if (isActive) {\r\n    return (\r\n      <form id=\"new-project-creator\" onSubmit={handleCreateProject}>\r\n        <h3>Start a new project:</h3>\r\n        <input id=\"new-project-title\" placeholder=\"Project Title\" />\r\n        <button id=\"submit\">Create Project</button>\r\n        <button\r\n          id=\"btn-toggle-project-creator\"\r\n          onClick={() => toggleActive(false)}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    );\r\n  } else {\r\n    return (\r\n      <button\r\n        id=\"btn-toggle-project-creator\"\r\n        onClick={() => toggleActive(true)}\r\n      >\r\n        Start New Project\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\nimport \"../styles/ProjectsMenu.css\";\r\nimport NewProjectCreator from \"./NewProjectCreator\";\r\n\r\nexport default function ProjectsMenu() {\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n  const navigate = useNavigate();\r\n  const projects = useSelector((state) => state.user.projects, shallowEqual);\r\n\r\n  //TODO: add a popup if flag: user created\r\n\r\n  async function handleDeleteProject(projectId) {\r\n    const request = createRequest(\"DELETE\", token);\r\n    const response = await fetch(`${PATH}/projects/${projectId}`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      dispatch({\r\n        type: \"project/deleted\",\r\n        payload: { projectId: projectId },\r\n        token: token,\r\n      });\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  async function handleLoadProject(projectId) {\r\n    const request = createRequest(\"GET\", token);\r\n    const response = await fetch(`${PATH}/projects/${projectId}`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: \"project/loaded\",\r\n        payload: result.project,\r\n        token: token,\r\n      });\r\n      navigate(`../project/${projectId}`);\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  const listProjects = projects\r\n    ? projects.map((project) => {\r\n        return (\r\n          //TODO: Change to project.id\r\n          <li key={project.projectId}>\r\n            {project.title}\r\n            <button onClick={() => handleLoadProject(project.projectId)}>\r\n              Edit\r\n            </button>\r\n            <button onClick={() => handleDeleteProject(project.projectId)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })\r\n    : null;\r\n\r\n  return (\r\n    <div id=\"projects-menu\">\r\n      {projects && <ul id=\"projects-list\">{listProjects}</ul>}\r\n      <NewProjectCreator />\r\n    </div>\r\n  );\r\n}\r\n","/* This page should contain user settings control as well as list of projects */\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/UserPage.css\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport ProjectsMenu from \"../ProjectsMenu\";\r\n\r\nexport default function UserPage() {\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <>\r\n      <PageHeader></PageHeader>\r\n      <nav id=\"mode-selector\">\r\n        <button>My Projects</button>\r\n        <button onClick={() => navigate(`/user/${user.id}/settings`)}>\r\n          Settings\r\n        </button>\r\n      </nav>\r\n      <ProjectsMenu />\r\n    </>\r\n  );\r\n}\r\n","/* User settings controls on User Settings Page */\r\n\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useRequestTools from \"../hooks/useRequestTools\";\r\n\r\nexport default function UserSettings() {\r\n  const user = useSelector((state) => state.user);\r\n  const [createRequest, dispatch, handleApiError, PATH, token] =\r\n    useRequestTools();\r\n\r\n  const [isEditingUsername, toggleEditingUsername] = useState(false);\r\n  const [newUsername, setNewUsername] = useState(user.name);\r\n  const [isEditingEmail, toggleEditingEmail] = useState(false);\r\n  const [newEmail, setNewEmail] = useState(user.email);\r\n  const [isEditingPassword, toggleEditingPassword] = useState(false);\r\n\r\n  async function editUsername(e) {\r\n    e.preventDefault();\r\n    const request = createRequest(\"PATCH\", token, {\r\n      name: newUsername,\r\n    });\r\n    const response = await fetch(`${PATH}/users/`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      toggleEditingUsername(false);\r\n      dispatch({ type: \"user/patched\", payload: result, token: token });\r\n      alert(\"Password successfully changed\");\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  async function editEmail(e) {\r\n    e.preventDefault();\r\n    const request = createRequest(\"PATCH\", token, {\r\n      email: newEmail,\r\n    });\r\n    const response = await fetch(`${PATH}/users/`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      toggleEditingEmail(false);\r\n      dispatch({ type: \"user/patched\", payload: result, token: token });\r\n      alert(\"Password successfully changed\");\r\n    } else handleApiError(response);\r\n  }\r\n\r\n  async function editPassword(e) {\r\n    e.preventDefault();\r\n    const oldPassword = document.getElementById(\"current-password\").value;\r\n    const newPassword1 = document.getElementById(\"new-password-1\").value;\r\n    const newpassword2 = document.getElementById(\"new-password-2\").value;\r\n    if (newPassword1 !== newpassword2) {\r\n      alert(\"New passwords do not match\");\r\n    } else {\r\n      const request = createRequest(\"PATCH\", token, {\r\n        email: user.email,\r\n        oldPassword: oldPassword,\r\n        newPassword: newPassword1,\r\n      });\r\n      const response = await fetch(`${PATH}/users`, request);\r\n      if (response.ok) {\r\n        const token = response.headers.get(\"X-Auth-Token\");\r\n        toggleEditingPassword(false);\r\n        dispatch({ type: \"user/patched\", payload: {}, token: token });\r\n        alert(\"Password successfully changed\");\r\n      } else handleApiError(response);\r\n    }\r\n  }\r\n\r\n  async function resetPasswordFields() {\r\n    document.getElementById(\"current-password\").value = \"\";\r\n    document.getElementById(\"new-password-1\").value = \"\";\r\n    document.getElementById(\"new-password-2\").value = \"\";\r\n    toggleEditingPassword(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>User Name:</h2>\r\n      {isEditingUsername ? (\r\n        <form onSubmit={editUsername}>\r\n          <input\r\n            type=\"text\"\r\n            value={newUsername}\r\n            onChange={(e) => setNewUsername(e.target.value)}\r\n          />\r\n          <button type=\"submit\" onClick={editUsername}>\r\n            Save\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              toggleEditingUsername(false);\r\n              setNewUsername(user.name);\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <>\r\n          <p>{user.name}</p>\r\n          <button onClick={() => toggleEditingUsername(true)}>Edit</button>\r\n        </>\r\n      )}\r\n      <h2>Email Address:</h2>\r\n      {isEditingEmail ? (\r\n        <form onSubmit={editEmail}>\r\n          <input\r\n            type=\"text\"\r\n            value={newEmail}\r\n            onChange={(e) => setNewEmail(e.target.value)}\r\n          />\r\n          <button type=\"submit\" onClick={editEmail}>\r\n            Save\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              toggleEditingEmail(false);\r\n              setNewEmail(user.email);\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <>\r\n          <p>{user.email}</p>\r\n          <button onClick={() => toggleEditingEmail(true)}>Edit</button>\r\n        </>\r\n      )}\r\n\r\n      <h2>Password</h2>\r\n      {isEditingPassword ? (\r\n        <form onSubmit={editPassword}>\r\n          <p>Current password:</p>\r\n          <input id=\"current-password\" type=\"text\" />\r\n\r\n          <p>Enter new password:</p>\r\n          <input id=\"new-password-1\" type=\"text\" />\r\n\r\n          <p>Re-enter new password:</p>\r\n          <input id=\"new-password-2\" type=\"text\" />\r\n\r\n          <button type=\"submit\" onClick={editPassword}>\r\n            Save\r\n          </button>\r\n          <button type=\"button\" onClick={() => resetPasswordFields()}>\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <button onClick={() => toggleEditingPassword(true)}>\r\n          Change Password\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","/* This page should contain user settings control as well as list of projects */\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/UserPage.css\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport UserSettings from \"../UserSettings\";\r\n\r\nexport default function UserPage() {\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <>\r\n      <PageHeader></PageHeader>\r\n      <nav id=\"mode-selector\">\r\n        <button onClick={() => navigate(`/user/${user.id}/projects`)}>\r\n          My Projects\r\n        </button>\r\n        <button>User Settings</button>\r\n      </nav>\r\n      <UserSettings />\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* This reducer handles redux actions affecting state.project */\r\n\r\nconst initialState = {\r\n  projectId: null,\r\n  title: \"\",\r\n  stages: [],\r\n};\r\n\r\nexport default function projectReducer(prevState = initialState, action) {\r\n  let state = { ...prevState }; // mutate new state not prevState\r\n  const payload = action.payload;\r\n  if (\r\n    action.type.startsWith(\"project\") ||\r\n    action.type.startsWith(\"stage\") ||\r\n    action.type.startsWith(\"task\")\r\n  ) {\r\n    console.log(payload);\r\n  }\r\n\r\n  switch (action.type) {\r\n    /***** Project actions *****/\r\n    case \"project/reorderStages\": {\r\n      state.stages = payload;\r\n      return state;\r\n    }\r\n    case \"project/created\": {\r\n      if (!state.projectId) {\r\n        state = payload;\r\n      }\r\n      return state;\r\n    }\r\n    case \"project/loaded\": {\r\n      state = payload;\r\n      return state;\r\n    }\r\n    case \"project/unloaded\": {\r\n      return initialState;\r\n    }\r\n    case \"project/deleted\": {\r\n      // TODO: amend to just payload not payload.project\r\n      if (payload.projectId === state.projectId) {\r\n        return initialState;\r\n      }\r\n      return state;\r\n    }\r\n\r\n    /***** Stage actions *****/\r\n    case \"stage/created\": {\r\n      state.stages = state.stages.concat(payload);\r\n      return state;\r\n    }\r\n    case \"stage/updated\": {\r\n      const index = state.stages.findIndex(\r\n        (stage) => stage.stageId === payload.stageId\r\n      );\r\n      state.stages[index] = payload;\r\n      return state;\r\n    }\r\n    case \"stage/deleted\": {\r\n      state.stages = state.stages.filter(\r\n        (stage) => stage.stageId !== payload.stageId\r\n      );\r\n      return state;\r\n    }\r\n\r\n    /***** Task actions *****/\r\n    case \"task/created\": {\r\n      // find stage\r\n      const stage = state.stages.find(\r\n        (stage) => stage.stageId === payload.stageId\r\n      );\r\n      // add new task\r\n      stage.tasks = stage.tasks.concat(payload.task);\r\n      return state;\r\n    }\r\n    case \"task/deleted\": {\r\n      // find stage\r\n      const stage = state.stages.find(\r\n        (stage) => stage.stageId === payload.stageId\r\n      );\r\n      // delete task\r\n      stage.tasks = stage.tasks.filter(\r\n        (task) => task.taskId !== payload.taskId\r\n      );\r\n      return state;\r\n    }\r\n    case \"task/updated\": {\r\n      // locate stage\r\n      const stageIndex = state.stages.findIndex(\r\n        (stage) => stage.stageId === payload.stageId\r\n      );\r\n      // locate task\r\n      const taskIndex = state.stages[stageIndex].tasks.findIndex(\r\n        (task) => task.taskId === payload.task.taskId\r\n      );\r\n      state.stages[stageIndex].tasks[taskIndex] = payload.task;\r\n      return state;\r\n    }\r\n\r\n    /***** User actions *****/\r\n    case \"user/loggedOut\": {\r\n      return initialState;\r\n    }\r\n\r\n    /***** Default *****/\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","/* This reducer handles redux actions affecting state.user */\r\n\r\nconst initialState = {};\r\n\r\nexport default function userReducer(prevState = initialState, action) {\r\n  let state = { ...prevState }; //mutate new state not prevState\r\n  const payload = action.payload;\r\n\r\n  switch (action.type) {\r\n    case \"user/created\":\r\n      state = payload;\r\n      state.flag = \"EMAIL_CONFIRMATION\"; //TODO: use me\r\n      return state;\r\n\r\n    case \"user/loggedIn\":\r\n      state = payload;\r\n      state.flag = \"LOGGED_IN\";\r\n      return state;\r\n\r\n    case \"user/loggedOut\":\r\n      state = { flag: \"LOGGED_OUT\" };\r\n      return state;\r\n\r\n    case \"user/deleted\": // currently not in use\r\n      state = { flag: \"DELETED\" };\r\n      return state;\r\n\r\n    case \"user/patched\":\r\n      if (payload.name) {\r\n        state.name = payload.name;\r\n      }\r\n      if (payload.email) {\r\n        state.email = payload.email;\r\n      }\r\n      return state;\r\n\r\n    case \"user/reorderProjects\":\r\n      /* Currently this triggers re-render of stages & tasks */\r\n      /* This is unnecessary and may be optimized */\r\n      state.projects = payload;\r\n      return state;\r\n\r\n    case \"project/created\":\r\n      /* add project data to user.projects */\r\n      state.projects = state.projects.concat({\r\n        title: payload.title,\r\n        projectId: payload.projectId,\r\n      });\r\n      return state;\r\n\r\n    case \"project/deleted\":\r\n      /* remove deleted project from user.projects */\r\n      state.projects = state.projects.filter(\r\n        (project) => project.projectId !== payload.projectId\r\n      );\r\n      return state;\r\n\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport tokenReducer from \"./tokenReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  project: projectReducer,\r\n  user: userReducer,\r\n  token: tokenReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","/* Refreshes auth token or deletes token on logout*/\r\nconst initialState = \"\";\r\n\r\nexport default function userReducer(prevState = initialState, action) {\r\n  if (action.token) {\r\n    return action.token;\r\n  }\r\n  if (action.type === \"user/loggedOut\") {\r\n    return initialState;\r\n  }\r\n  return prevState;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Outlet, Route, Routes } from \"react-router-dom\";\r\nimport { createStore } from \"redux\";\r\nimport HomePage from \"./components/Pages/HomePage\";\r\nimport LogoutPage from \"./components/Pages/LogoutPage\";\r\nimport ProjectPage from \"./components/Pages/ProjectPage\";\r\nimport Redirect from \"./components/Pages/Redirect\";\r\nimport SignupPage from \"./components/Pages/SignupPage\";\r\nimport UnsavedProjectPage from \"./components/Pages/UnsavedProjectPage\";\r\nimport UserProjectsPage from \"./components/Pages/UserProjectsPage\";\r\nimport UserSettingsPage from \"./components/Pages/UserSettingsPage\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport rootReducer from \"./state/rootReducer\";\r\nimport \"./styles/index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={createStore(rootReducer)}>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Outlet />}>\r\n            <Route index element={<HomePage />} />\r\n            <Route path=\"signup\" element={<SignupPage />} />\r\n            <Route path=\"logout\" element={<LogoutPage />} />\r\n            <Route path=\"user/:userId/\" element={<Redirect />} />\r\n            <Route\r\n              path=\"user/:userId/projects\"\r\n              element={<UserProjectsPage />}\r\n            />\r\n            <Route\r\n              path=\"user/:userId/settings\"\r\n              element={<UserSettingsPage />}\r\n            />\r\n            <Route path=\"project/:projectId\" element={<ProjectPage />} />\r\n            <Route path=\"unsavedproject\" element={<UnsavedProjectPage />} />\r\n            <Route path=\"*\" element={<HomePage />} />\r\n          </Route>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}