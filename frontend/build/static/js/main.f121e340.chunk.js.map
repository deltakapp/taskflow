{"version":3,"sources":["utils/apiDomain.js","components/Pages/HomePage.js","components/Pages/LogoutPage.js","utils/createRequest.js","utils/itemTypes.js","components/ProjectTab.js","components/Navbar.js","components/UserTab.js","components/PageHeader.js","hooks/useLogout.js","components/StageEditor.js","components/TaskCard.js","components/TaskCreator.js","components/Stage.js","components/StageCreator.js","components/ProjectBoard.js","components/Pages/ProjectPage.js","components/Pages/Redirect.js","components/Pages/SignupPage.js","hooks/useLogin.js","components/Pages/UnsavedProjectPage.js","components/NewProjectCreator.js","components/ProjectsMenu.js","components/Pages/UserProjectsPage.js","components/UserSettings.js","components/Pages/UserSettingsPage.js","reportWebVitals.js","state/projectReducer.js","state/userReducer.js","state/rootReducer.js","state/tokenReducer.js","index.js"],"names":["apiDomain","window","location","hostname","HomePage","dispatch","useDispatch","navigate","useNavigate","user","useSelector","state","shallowEqual","e","a","preventDefault","email","document","getElementById","password","request","method","cache","headers","body","JSON","stringify","value","fetch","URL","response","ok","json","result","type","payload","token","console","log","message","useEffect","id","setTimeout","className","alt","src","href","onSubmit","placeholder","to","LogoutPage","createRequest","Authorization","ItemTypes","ProjectTab","index","title","projectId","reorderProjects","loadProject","ref","useRef","useDrop","accept","hover","item","monitor","current","sourceIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleX","right","left","hoverClientX","getClientOffset","x","drop","useDrag","collect","isDragging","opacity","drag","style","onClick","NavPane","useState","creatorIsOpen","toggleCreatorOpen","projects","handleCreateProject","useCallback","get","project","error","status","newProjects","splice","map","renderProjectTab","createProject","htmlFor","height","viewBox","version","width","fillRule","d","UserTab","name","logoutUser","PageHeader","useLogout","StageEditor","stageId","open","toggleOpen","newTitle","setNewTitle","maxLength","onChange","target","TaskCard","taskId","taskIndex","stageIndex","task","stages","tasks","isEditing","toggleEditing","details","newDetails","setNewDetails","handleDeleteTask","titleBar","rows","taskOptions","TaskCreator","setTitle","setDetails","Stage","reorderStages","stage","taskList","role","handleDeleteStage","StageCreator","required","ProjectBoard","newStages","stageList","ProjectPage","backend","HTML5Backend","Redirect","SignupPage","useLogin","UnsavedProjectPage","NewProjectCreator","isActive","toggleActive","ProjectsMenu","listProjects","handleLoadProject","handleDeleteProject","UserPage","UserSettings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","prevState","action","startsWith","concat","findIndex","filter","find","flag","ReactDOM","render","StrictMode","store","createStore","path","element"],"mappings":"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","file":"static/js/main.f121e340.chunk.js","sourcesContent":["/********************* FOR DEVELOPMENT ONLY. *************************/\r\n/* Basically a client-side environmental variable holding URL of API */\r\n/* In production, this can be replaced with a constant */\r\n\r\nexport const apiDomain =\r\n  window.location.hostname === \"localhost\"\r\n    ? \"http://localhost:5000\"\r\n    : \"https://taskflow.herokuapp.com\";\r\n","import { useEffect } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { apiDomain as URL } from \"../../utils/apiDomain\";\r\n\r\nexport default function HomePage() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user, shallowEqual);\r\n\r\n  useEffect(() => {\r\n    console.log(\"homepage effect\");\r\n    if (user.id) {\r\n      setTimeout(() => {\r\n        navigate(`../user/${user.id}`);\r\n      }, 1500);\r\n    }\r\n  }, [user.id, navigate]);\r\n\r\n  async function handleLogin(e) {\r\n    e.preventDefault();\r\n    const email = document.getElementById(\"user-email\");\r\n    const password = document.getElementById(\"user-password\");\r\n    const request = {\r\n      method: \"POST\",\r\n      cache: \"no-store\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email.value,\r\n        password: password.value,\r\n      }),\r\n    };\r\n    const response = await fetch(`${URL}/api/users/login`, request);\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: \"user/loggedIn\",\r\n        payload: result.user,\r\n        token: result.token,\r\n      });\r\n    } else {\r\n      const result = await response.json();\r\n      console.log(result.message || response);\r\n      dispatch({ type: \"user/failedLogin\" });\r\n    }\r\n    email.value = \"\";\r\n    password.value = \"\";\r\n  }\r\n\r\n  return (\r\n    <main className=\"single\">\r\n      <img className=\"logo\" alt=\"Taskflow.tech\" src=\"/logo.png\" />\r\n      <h1>\r\n        <a href=\"/\">Taskflow.tech</a>\r\n      </h1>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input id=\"user-email\" type=\"text\" placeholder=\"E-mail\" />\r\n        <input id=\"user-password\" type=\"password\" placeholder=\"Password\" />\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n      <h3>\r\n        <Link to=\"/signup\">Sign Up</Link>\r\n      </h3>\r\n    </main>\r\n  );\r\n}\r\n","/* Just a splash screen informing user they have been logged out */\r\n/* Redirects to homepage after timeout */\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function LogoutPage() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      navigate(\"/\");\r\n    }, 1500);\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <main className=\"single\">\r\n      <img className=\"logo\" alt=\"Taskflow.tech\" src=\"/logo.png\" />\r\n      <h1>\r\n        <a href=\"/\">Taskflow.tech</a>\r\n      </h1>\r\n      <h2>You have been logged out and will be redirected.</h2>\r\n    </main>\r\n  );\r\n}\r\n","/* Creates API requests */\r\n/* This creates any request for which auth is needed */\r\n\r\nexport default function createRequest(method, token, json) {\r\n  const request = {\r\n    method: method,\r\n    headers: {\r\n      Authorization: token,\r\n      cache: \"no-store\",\r\n    },\r\n  };\r\n  if (json) {\r\n    request.headers[\"Content-Type\"] = \"application/json\";\r\n    request.body = JSON.stringify(json);\r\n  }\r\n  return request;\r\n}\r\n","export const ItemTypes = {\r\n  PROJECTTAB: \"projectTab\",\r\n  STAGE: \"stage\",\r\n  //TODO: add item\r\n};\r\n","import { useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"../utils/itemTypes\";\r\n\r\nexport default function ProjectTab({\r\n  index,\r\n  title,\r\n  projectId,\r\n  reorderProjects,\r\n  loadProject,\r\n}) {\r\n  const ref = useRef(null);\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.PROJECTTAB,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      // The source index where item is being dragged from\r\n      const sourceIndex = item.index;\r\n      // Index of current hover position\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (sourceIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get horizontal middle\r\n      const hoverMiddleX =\r\n        (hoverBoundingRect.right - hoverBoundingRect.left) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientX = clientOffset.x - hoverBoundingRect.left;\r\n      //Only perform the move when the mouse has crossed half of the item's height\r\n      // When dragging leftwards, only move when the cursor is left of 50%\r\n      // When dragging downwards, only move when the cursor is above 50%\r\n      if (sourceIndex < hoverIndex && hoverClientX < hoverMiddleX) {\r\n        return;\r\n      }\r\n      if (sourceIndex > hoverIndex && hoverClientX > hoverMiddleX) {\r\n        return;\r\n      }\r\n      reorderProjects(sourceIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: ItemTypes.PROJECTTAB,\r\n    item: () => {\r\n      return { title, index };\r\n    },\r\n    collect: (monitor) => {\r\n      return { isDragging: monitor.isDragging() };\r\n    },\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  drag(drop(ref));\r\n\r\n  return (\r\n    <li ref={ref} style={{ opacity }}>\r\n      <button className=\"btn\" onClick={() => loadProject(projectId)}>\r\n        {title}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import { useCallback, useState } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\nimport ProjectTab from \"./ProjectTab\";\r\n\r\nexport default function NavPane() {\r\n  const [creatorIsOpen, toggleCreatorOpen] = useState(false);\r\n  const projects = useSelector((state) => state.user.projects, shallowEqual);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const handleCreateProject = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // TODO add blank title error handling\r\n      const request = createRequest(\"POST\", token, {\r\n        title: `${document.getElementById(\"new-project-title\").value}`,\r\n      });\r\n      const response = await fetch(`${URL}/api/projects/`, request);\r\n      if (response.ok) {\r\n        const token = response.headers.get(\"X-Auth-Token\");\r\n        const result = await response.json();\r\n        console.log(response); // DELETE ME\r\n        dispatch({\r\n          type: \"project/created\",\r\n          payload: result.project,\r\n          token: token,\r\n        });\r\n        toggleCreatorOpen(false);\r\n      } else console.error(response.status);\r\n    },\r\n    [token, dispatch]\r\n  );\r\n\r\n  const loadProject = useCallback(\r\n    async (projectId) => {\r\n      const request = createRequest(\"GET\", token);\r\n      const response = await fetch(`${URL}/api/projects/${projectId}`, request);\r\n      if (response.ok) {\r\n        const token = response.headers.get(\"X-Auth-Token\");\r\n        const result = await response.json();\r\n        console.log(response); // DELETE ME\r\n        dispatch({\r\n          type: \"project/loaded\",\r\n          payload: result.project,\r\n          token: token,\r\n        });\r\n        navigate(`../project/${projectId}`);\r\n      } else {\r\n        // error handling will be extremely tough here\r\n        console.error(response.status);\r\n      }\r\n    },\r\n    [token, dispatch, navigate]\r\n  );\r\n\r\n  /* reorder projects */\r\n  const reorderProjects = useCallback(\r\n    async (sourceIndex, hoverIndex) => {\r\n      if (!token) return; // abort if user logged out\r\n      const newProjects = [...projects]; // copy state for mutations\r\n      newProjects.splice(hoverIndex, 0, newProjects.splice(sourceIndex, 1)[0]);\r\n      console.log(newProjects);\r\n\r\n      /* dispatch reorder to redux state */\r\n      dispatch({ type: \"user/reorderProjects\", payload: newProjects });\r\n\r\n      /* send API request */\r\n      const request = createRequest(\"PATCH\", token, {\r\n        projects: newProjects.map((project) => project.projectId),\r\n      });\r\n      const response = await fetch(`${URL}/api/users/`, request);\r\n      if (response.ok) {\r\n        const token = response.headers.get(\"X-Auth-Token\");\r\n        if (token) dispatch({ type: \"token/refresh\", token: token });\r\n      } else console.error(response);\r\n    },\r\n    [projects, token, dispatch]\r\n  );\r\n\r\n  const renderProjectTab = useCallback(\r\n    (index, title, projectId) => {\r\n      return (\r\n        <ProjectTab\r\n          key={projectId}\r\n          index={index}\r\n          title={title}\r\n          projectId={projectId}\r\n          reorderProjects={reorderProjects}\r\n          loadProject={loadProject}\r\n        />\r\n      );\r\n    },\r\n    [reorderProjects, loadProject]\r\n  );\r\n\r\n  const createProject = creatorIsOpen ? ( // TODO: break into separate components\r\n    <div className=\"overlay\">\r\n      <div className=\"overlay-inner\">\r\n        <form id=\"new-project-creator\" onSubmit={handleCreateProject}>\r\n          <label htmlFor=\"new-project-title\">New Project:</label>\r\n          <input id=\"new-project-title\" />\r\n          <div className=\"two-button mt-2\">\r\n            <button id=\"submit\">Create Project</button>\r\n            <button\r\n              className=\"btn-close-task-creator ml-1\"\r\n              onClick={() => toggleCreatorOpen(false)}\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <li className=\"add-project\">\r\n      <button onClick={() => toggleCreatorOpen(true)} title=\"Add new project\">\r\n        <svg\r\n          height=\"16\"\r\n          viewBox=\"0 0 16 16\"\r\n          version=\"1.1\"\r\n          width=\"16\"\r\n          data-view-component=\"true\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M7.75 2a.75.75 0 01.75.75V7h4.25a.75.75 0 110 1.5H8.5v4.25a.75.75 0 11-1.5 0V8.5H2.75a.75.75 0 010-1.5H7V2.75A.75.75 0 017.75 2z\"\r\n          ></path>\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <nav id=\"navbar\">\r\n      <ul className=\"tabrow\">\r\n        {projects?.map((project, index) =>\r\n          renderProjectTab(index, project.title, project.projectId)\r\n        )}\r\n        {createProject}\r\n      </ul>\r\n      <br />\r\n    </nav>\r\n  );\r\n}\r\n","/* This component displays user.name and a logout button if */\r\n/* user is logged in, and a login link otherwise */\r\n/* This is meant as a subcomponent of PageHeader */\r\n\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/UserTab.css\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\n\r\nexport default function UserTab() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user, shallowEqual); // TODO: remove shallowequal\r\n  const token = useSelector((state) => state.token);\r\n\r\n  /* navigate to user page on click */\r\n  function handleNavUserPanel(e) {\r\n    e.preventDefault();\r\n    dispatch({ type: \"project/unloaded\" });\r\n    navigate(`/user/${user.id}`);\r\n  }\r\n\r\n  async function logoutUser() {\r\n    console.log(\"logging out user\");\r\n    const request = createRequest(\"POST\", token);\r\n    const response = await fetch(`${URL}/api/users/logout`, request);\r\n    console.log(request);\r\n    console.log(response);\r\n    setTimeout(() => {\r\n      dispatch({ type: \"user/loggedOut\" });\r\n    }, 500);\r\n  }\r\n\r\n  if (user.id) {\r\n    return (\r\n      <div id=\"user-tab\">\r\n        <button id=\"btn-user-name\" onClick={handleNavUserPanel}>\r\n          {user.name || \"Anonymous User\"}\r\n        </button>\r\n        <div id=\"user-panel\">\r\n          <button onClick={() => navigate(`/user/${user.id}/settings`)}>\r\n            Settings\r\n          </button>\r\n          <button onClick={() => navigate(`/user/${user.id}/projects`)}>\r\n            My Projects\r\n          </button>\r\n\r\n          <button onClick={() => logoutUser()} id=\"btn-logout\">\r\n            Log Out\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div id=\"user-tab\">\r\n        <Link to=\"login\" id=\"btn-login\">\r\n          Log In\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import useLogout from \"../hooks/useLogout\";\r\nimport \"../styles/PageHeader.css\";\r\nimport UserTab from \"./UserTab\";\r\n\r\nexport default function PageHeader() {\r\n  useLogout();\r\n\r\n  return (\r\n    <header id=\"page-header\">\r\n      <div id=\"app-title\">\r\n        <img className=\"logo\" alt=\"logo\" src=\"/logo-smol.png\" />\r\n      </div>\r\n      <UserTab />\r\n    </header>\r\n  );\r\n}\r\n","/* This hook ensures any componenets using it are only accessible */\r\n/* while user is signed in */\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function useLogout() {\r\n  const token = useSelector((state) => state.token);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate(\"../logout\");\r\n    }\r\n\r\n    // TODO: implement token expiration UI handling\r\n  }, [token, navigate]);\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../styles/TaskCreator.css\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\n\r\nexport default function StageEditor({ stageId }) {\r\n  const [open, toggleOpen] = useState(false); // toggle editor open or closed\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const token = useSelector((state) => state.token);\r\n  const dispatch = useDispatch();\r\n\r\n  // TODO: implement closeStageEditor\r\n\r\n  async function handleEditStageName(e) {\r\n    // TODO: validate stage name\r\n    e.preventDefault();\r\n    const request = createRequest(\"PATCH\", token, {\r\n      title: newTitle,\r\n    });\r\n    const response = await fetch(`${URL}/api/stages/${stageId}`, request);\r\n    if (response.ok) {\r\n      toggleOpen(false); // close editor\r\n      const result = await response.json();\r\n      console.log(result);\r\n      dispatch({ type: \"stage/updated\", payload: result });\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  return open ? ( // display editor if open == true\r\n    <div className=\"overlay\">\r\n      <div className=\"overlay-inner\">\r\n        <form className=\"stage-rename\" onSubmit={handleEditStageName}>\r\n          <label htmlFor=\"rename\">Rename Stage:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"rename\"\r\n            maxLength=\"30\"\r\n            value={newTitle}\r\n            onChange={(e) => setNewTitle(e.target.value)}\r\n          />\r\n          <div className=\"two-button mt-2\">\r\n            <button className=\"btn-stage-rename mr-1\" type=\"submit\">\r\n              Rename\r\n            </button>\r\n            <button\r\n              className=\"btn-close-stage-rename ml-1\"\r\n              onClick={() => toggleOpen(false)}\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    // display button if open == false\r\n    <button className=\"btn\" onClick={() => toggleOpen(true)}>\r\n      Rename Stage\r\n    </button>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../styles/Task.css\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\n\r\nexport default function TaskCard({ taskId, taskIndex, stageId, stageIndex }) {\r\n  console.log(\"rendering task\");\r\n\r\n  const task = useSelector(\r\n    (state) => state.project.stages[stageIndex].tasks[taskIndex]\r\n  );\r\n  const token = useSelector((state) => state.token);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isEditing, toggleEditing] = useState(false);\r\n  const [newTitle, setNewTitle] = useState(task.title);\r\n  const [newDetails, setNewDetails] = useState(task.details);\r\n\r\n  /* cancel edits to task and stop editing */\r\n  function cancelEditTask() {\r\n    setNewTitle(task.title); // reset title according to redux state\r\n    setNewDetails(task.details);\r\n    toggleEditing(false);\r\n  }\r\n\r\n  async function editTask() {\r\n    console.log(newDetails);\r\n    const request = createRequest(\"PATCH\", token, {\r\n      title: newTitle,\r\n      details: newDetails,\r\n    });\r\n    const response = await fetch(\r\n      `${URL}/api/stages/${stageId}/tasks/${taskId}`,\r\n      request\r\n    );\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      console.log(result);\r\n      dispatch({\r\n        type: \"task/updated\",\r\n        payload: { stageId: stageId, task: result },\r\n      });\r\n      toggleEditing(false);\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n    toggleEditing(false);\r\n  }\r\n\r\n  async function handleDeleteTask() {\r\n    const request = createRequest(\"DELETE\", token);\r\n    const response = await fetch(\r\n      `${URL}/api/stages/${stageId}/tasks/${taskId}`,\r\n      request\r\n    );\r\n    if (response.ok) {\r\n      console.log(response);\r\n      dispatch({\r\n        type: \"task/deleted\",\r\n        payload: { stageId: stageId, taskId: taskId },\r\n      });\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  const titleBar = isEditing ? ( // if isEditing true\r\n    <div className=\"task-title-bar\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"task-title-editor\"\r\n        placeholder={task.title}\r\n        onChange={(e) => setNewTitle(e.target.value)}\r\n      />\r\n      <div>\r\n        <button className=\"btn-cancel-edit-task\" onClick={cancelEditTask}>\r\n          🚫\r\n        </button>\r\n        <button className=\"btn-save-task\" onClick={editTask}>\r\n          💾\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    // if isEditing is false\r\n    <div className=\"task-title-bar\">\r\n      <p className=\"task-title\">{task.title}</p>\r\n      <button className=\"btn-edit-task\" onClick={() => toggleEditing(true)}>\r\n        ✏️\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  const details = isEditing ? (\r\n    <textarea\r\n      className=\"task-details\"\r\n      name=\"task-details\"\r\n      rows=\"4\"\r\n      value={newDetails}\r\n      onChange={(e) => setNewDetails(e.target.value)}\r\n    ></textarea>\r\n  ) : (\r\n    <form>\r\n      {task.details && <hr />}\r\n      <p className=\"task-details\">{task.details}</p>\r\n    </form>\r\n  );\r\n\r\n  const taskOptions = isEditing && (\r\n    <>\r\n      <hr />\r\n      <div className=\"task-options\">\r\n        <button className=\"btn-delete-task\" onClick={() => handleDeleteTask()}>\r\n          🗑️ Delete Task\r\n        </button>\r\n        <button\r\n          className=\"btn-complete-task\"\r\n          onClick={() => handleDeleteTask()}\r\n        >\r\n          ✔️ Mark Complete\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"task-card\">\r\n      {titleBar}\r\n      {details}\r\n      {taskOptions}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\n\r\nexport default function TaskCreator({ stageId }) {\r\n  const [open, toggleOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const token = useSelector((state) => state.token);\r\n  const dispatch = useDispatch();\r\n\r\n  async function handleCreateTask(e) {\r\n    e.preventDefault();\r\n    // const titleField = e.target.querySelector(\".new-task-title\");\r\n    const request = createRequest(\"POST\", token, {\r\n      title: title,\r\n      details: details,\r\n    });\r\n    const response = await fetch(`${URL}/api/stages/${stageId}/tasks`, request);\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      console.log(result);\r\n      dispatch({\r\n        type: \"task/created\",\r\n        payload: { task: result, stageId: stageId },\r\n      });\r\n      toggleOpen(false); // close task creator\r\n      setTitle(\"\"); // reset title field\r\n      setDetails(\"\"); // reset details field\r\n    } else {\r\n      console.log(response);\r\n    }\r\n  }\r\n\r\n  /*  TODO: add disabled=\"\" to Create Task button\r\n            requires js to remove if content in text area */\r\n\r\n  return open ? (\r\n    <div className=\"task-creator\">\r\n      <form onSubmit={handleCreateTask}>\r\n        <textarea\r\n          className=\"new-task-title\"\r\n          placeholder=\"Enter a task\"\r\n          maxLength=\"31\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          className=\"new-task-details\"\r\n          placeholder=\"Enter details (optional)\"\r\n          maxLength=\"500\"\r\n          value={details}\r\n          onChange={(e) => setDetails(e.target.value)}\r\n        />\r\n        <div className=\"two-button mt-2\">\r\n          <button className=\"btn-create-task mr-1\" type=\"submit\">\r\n            Create Task\r\n          </button>\r\n          <button\r\n            className=\"btn-close-task-creator ml-1\"\r\n            onClick={() => toggleOpen(false)}\r\n            type=\"button\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  ) : (\r\n    <div className=\"task-creator float-right\">\r\n      <button\r\n        className=\"btn-open-task-creator\"\r\n        onClick={() => toggleOpen(true)}\r\n      >\r\n        <svg\r\n          height=\"16\"\r\n          viewBox=\"0 0 16 16\"\r\n          version=\"1.1\"\r\n          width=\"16\"\r\n          data-view-component=\"true\"\r\n          className=\"mr-2\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M7.75 2a.75.75 0 01.75.75V7h4.25a.75.75 0 110 1.5H8.5v4.25a.75.75 0 11-1.5 0V8.5H2.75a.75.75 0 010-1.5H7V2.75A.75.75 0 017.75 2z\"\r\n          ></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport \"../styles/Stage.css\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\nimport { ItemTypes } from \"../utils/itemTypes\";\r\nimport StageEditor from \"./StageEditor\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport TaskCreator from \"./TaskCreator\";\r\n\r\nexport default function Stage({ stageId, stageIndex, title, reorderStages }) {\r\n  console.log(`Rendering stage ${title}`);\r\n  const stage = useSelector((state) => state.project.stages[stageIndex]);\r\n  const tasks = useSelector(\r\n    (state) => state.project.stages[stageIndex].tasks,\r\n    shallowEqual\r\n  );\r\n  const token = useSelector((state) => state.token);\r\n  const dispatch = useDispatch();\r\n  const ref = useRef(null);\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.STAGE, //change PROJECT to PROJECTTAB\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      // The source index where item is being dragged from\r\n      const sourceIndex = item.index;\r\n      // Index of current hover position\r\n      const hoverIndex = stageIndex;\r\n      // Don't replace items with themselves\r\n      if (sourceIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get horizontal middle\r\n      const hoverMiddleX =\r\n        (hoverBoundingRect.right - hoverBoundingRect.left) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientX = clientOffset.x - hoverBoundingRect.left;\r\n      //Only perform the move when the mouse has crossed half of the item's height\r\n      // When dragging leftwards, only move when the cursor is left of 50%\r\n      // When dragging downwards, only move when the cursor is above 50%\r\n      if (sourceIndex < hoverIndex && hoverClientX < hoverMiddleX) {\r\n        return;\r\n      }\r\n      if (sourceIndex > hoverIndex && hoverClientX > hoverMiddleX) {\r\n        return;\r\n      }\r\n      reorderStages(sourceIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: ItemTypes.STAGE,\r\n    item: () => {\r\n      return { title, stageIndex };\r\n    },\r\n    collect: (monitor) => {\r\n      return { isDragging: monitor.isDragging() };\r\n    },\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  drag(drop(ref));\r\n\r\n  async function handleDeleteStage(stageId) {\r\n    const request = createRequest(\"DELETE\", token);\r\n    const response = await fetch(`${URL}/api/stages/${stageId}`, request);\r\n    if (response.ok) {\r\n      dispatch({ type: \"stage/deleted\", payload: { stageId: stageId } });\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  const taskList = tasks\r\n    ? tasks.map((task, index) => {\r\n        return (\r\n          <TaskCard\r\n            key={task.taskId}\r\n            taskId={task.taskId}\r\n            taskIndex={index}\r\n            stageId={stageId}\r\n            stageIndex={stageIndex}\r\n          />\r\n        );\r\n      })\r\n    : null;\r\n\r\n  return (\r\n    <section className=\"stage\" key={stageId} ref={ref}>\r\n      <div className=\"stage-header\">\r\n        <details className=\"dropdown\">\r\n          {\" \"}\r\n          {/*TODO: change from css toggle to react toggle */}\r\n          <summary className=\"\" role=\"button\">\r\n            <h3 className=\"stage-title\">{stage.title}</h3>\r\n            <svg\r\n              height=\"16\"\r\n              viewBox=\"0 0 16 16\"\r\n              version=\"1.1\"\r\n              width=\"16\"\r\n              data-view-component=\"true\"\r\n              className=\"float-right\"\r\n            >\r\n              <path d=\"M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\"></path>\r\n            </svg>\r\n            <TaskCreator stageId={stageId} stageIndex={stageIndex} />\r\n          </summary>\r\n          <span className=\"dropdown-content mt-4\">\r\n            <ul>\r\n              <li>\r\n                <StageEditor stageId={stageId} />\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => handleDeleteStage(stageId)}\r\n                >\r\n                  Delete Stage\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </span>\r\n        </details>\r\n      </div>\r\n      {taskList}\r\n    </section>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\n\r\nexport default function StageCreator({ projectId }) {\r\n  const [open, toggleOpen] = useState(false); // toggle creator open or closed\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const token = useSelector((state) => state.token);\r\n  const dispatch = useDispatch();\r\n\r\n  async function handleCreateStage(e) {\r\n    // TODO: validate stage name\r\n    e.preventDefault();\r\n    const request = createRequest(\"POST\", token, {\r\n      title: newTitle,\r\n      projectId: projectId,\r\n    });\r\n    const response = await fetch(`${URL}/api/stages`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      console.log(result);\r\n      dispatch({\r\n        type: \"stage/created\",\r\n        payload: result,\r\n        token: token,\r\n      });\r\n      toggleOpen(false);\r\n      setNewTitle(\"\"); // reset new title field\r\n    } else {\r\n      console.error(response);\r\n    }\r\n  }\r\n\r\n  // async function handleEditStageName(id) {\r\n  //   const titleField = id.target.querySelector(\".rename\");\r\n  //   console.log(titleField);\r\n  //   console.log(titleField.value);\r\n  //   const request = createRequest(\"PATCH\", token, {\r\n  //     title: `${titleField.value}`,\r\n  //   });\r\n  //   const response = await fetch(\r\n  //     `${URL}/api/projects/${projectId}/stages/${id}`,\r\n  //     request\r\n  //   );\r\n  //   if (response.ok) {\r\n  //     const result = await response.json();\r\n  //     console.log(result);\r\n  //     dispatch({ type: \"stage/updated\", payload: { stage: result } });\r\n  //   } else {\r\n  //     console.log(response.status);\r\n  //   }\r\n  // }\r\n\r\n  return open ? (\r\n    <div className=\"overlay\">\r\n      <div className=\"overlay-inner\">\r\n        <form onSubmit={handleCreateStage}>\r\n          <label htmlFor=\"new-stage-title\">Create Stage:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"new-stage-title\"\r\n            value={newTitle}\r\n            maxLength=\"29\"\r\n            required\r\n            onChange={(e) => setNewTitle(e.target.value)}\r\n          ></input>\r\n          <div className=\"two-button mt-2\">\r\n            <button className=\"btn-create-stage\" type=\"submit\">\r\n              Create Stage\r\n            </button>\r\n            <button\r\n              className=\"btn-toggle-stage-creator\"\r\n              onClick={() => toggleOpen(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <section className=\"stage create\">\r\n      <button className=\"btn\" onClick={() => toggleOpen(true)}>\r\n        Create Stage\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport \"../styles/ProjectBoard.css\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\nimport Stage from \"./Stage\";\r\nimport StageCreator from \"./StageCreator\";\r\n\r\nexport default function ProjectBoard() {\r\n  const projectId = useSelector((state) => state.project.projectId);\r\n  const stages = useSelector((state) => state.project.stages, shallowEqual);\r\n  const token = useSelector((state) => state.token);\r\n  const dispatch = useDispatch();\r\n\r\n  /* Reorder stages */\r\n  const reorderStages = useCallback(\r\n    async (sourceIndex, hoverIndex) => {\r\n      if (!token) return; // abort if user logged out\r\n      const newStages = [...stages]; // copy state for mutations\r\n      newStages.splice(hoverIndex, 0, newStages.splice(sourceIndex, 1)[0]);\r\n      console.log(newStages);\r\n\r\n      /* dispatch reorder to redux state */\r\n      dispatch({ type: \"project/reorderStages\", payload: newStages });\r\n\r\n      /* send API request */\r\n      const request = createRequest(\"PATCH\", token, {\r\n        stages: newStages.map((stage) => stage.stageId), // send array of stageIds\r\n      });\r\n      const response = await fetch(`${URL}/api/projects/${projectId}`, request);\r\n      if (response.ok) {\r\n        const token = response.headers.get(\"X-Auth-Token\");\r\n        if (token) dispatch({ type: \"token/refresh\", token: token });\r\n      } else {\r\n        console.error(response);\r\n      }\r\n    },\r\n    [stages, token, projectId, dispatch]\r\n  );\r\n\r\n  const stageList = stages?.map((stage, index) => (\r\n    <Stage\r\n      key={stage.stageId}\r\n      stageId={stage.stageId}\r\n      stageIndex={index}\r\n      title={stage.title}\r\n      reorderStages={reorderStages}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div id=\"project-board\">\r\n      {stageList}\r\n      {/* {stages?.map((stage, index) =>\r\n        renderStage(stage.stageId, index, stage.title)\r\n      )} */}\r\n      <StageCreator projectId={projectId} />\r\n    </div>\r\n  );\r\n}\r\n","/* Main Component displays either project interface or project selection menu */\r\n\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport Navbar from \"../Navbar\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport ProjectBoard from \"../ProjectBoard\";\r\n\r\nexport default function ProjectPage() {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <PageHeader />\r\n      <Navbar />\r\n      <main>\r\n        <ProjectBoard />\r\n      </main>\r\n    </DndProvider>\r\n  );\r\n}\r\n","import { Navigate } from \"react-router-dom\";\r\n\r\nexport default function Redirect() {\r\n  return <Navigate to=\"projects\" />;\r\n}\r\n","/* This page lets users sign up */\r\n\r\n//TODO: use createRequest\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport useLogin from \"../../hooks/useLogin\";\r\nimport { apiDomain as URL } from \"../../utils/apiDomain\";\r\n\r\nexport default function SignupPage() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useLogin();\r\n\r\n  async function handleSignup(e) {\r\n    e.preventDefault();\r\n    const name = document.getElementById(\"user-name\");\r\n    const email = document.getElementById(\"user-email\");\r\n    const password = document.getElementById(\"user-password\");\r\n    const request = {\r\n      method: \"POST\",\r\n      cache: \"no-store\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name.value,\r\n        email: email.value,\r\n        password: password.value,\r\n      }),\r\n    };\r\n    console.log(request);\r\n    const response = await fetch(`${URL}/api/users`, request);\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      console.log(result);\r\n      dispatch({\r\n        type: \"user/created\",\r\n        payload: result.user,\r\n        token: result.token,\r\n      });\r\n    } else {\r\n      const result = await response.json();\r\n      console.log(result.message || response);\r\n      dispatch({ type: \"user/failedLogin\" });\r\n    }\r\n    name.value = \"\";\r\n    email.value = \"\";\r\n    password.value = \"\";\r\n  }\r\n\r\n  return !user.id ? (\r\n    <main className=\"single\">\r\n      <img className=\"logo\" alt=\"Taskflow.tech\" src=\"/logo.png\" />\r\n      <h1>\r\n        <a href=\"/\">Taskflow.tech</a>\r\n      </h1>\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSignup}>\r\n        <input id=\"user-name\" type=\"text\" placeholder=\"User Name\" />\r\n        <input id=\"user-email\" type=\"text\" placeholder=\"Email Address\" />\r\n        <input id=\"user-password\" type=\"password\" placeholder=\"Password\" />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      <h3>\r\n        <Link to=\"/\">Log In</Link>\r\n      </h3>\r\n    </main>\r\n  ) : (\r\n    <h1>User is logged in</h1>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function useLogin() {\r\n  const user = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (user.id) {\r\n      setTimeout(() => {\r\n        navigate(`../user/${user.id}`);\r\n      }, 1500);\r\n    }\r\n  }, [user.id, navigate]);\r\n}\r\n","export default function UnsavedProjectPage() {\r\n  return <h1>Unsaved Project</h1>;\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\n\r\nexport default function NewProjectCreator() {\r\n  const token = useSelector((state) => state.token);\r\n  const [isActive, toggleActive] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  async function handleCreateProject(e) {\r\n    e.preventDefault();\r\n    // TODO add blank title error handling\r\n    const request = createRequest(\"POST\", token, {\r\n      title: `${document.getElementById(\"new-project-title\").value}`,\r\n    });\r\n    const response = await fetch(`${URL}/api/projects/`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      console.log(result);\r\n      await dispatch({\r\n        type: \"project/created\",\r\n        payload: result.project,\r\n        token: token,\r\n      });\r\n      navigate(`../project/${result.project.projectId}`);\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  if (isActive) {\r\n    return (\r\n      <form id=\"new-project-creator\" onSubmit={handleCreateProject}>\r\n        <h3>Start a new project:</h3>\r\n        <input id=\"new-project-title\" placeholder=\"Project Title\" />\r\n        <button id=\"submit\">Create Project</button>\r\n        <button\r\n          id=\"btn-toggle-project-creator\"\r\n          onClick={() => toggleActive(false)}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    );\r\n  } else {\r\n    return (\r\n      <button\r\n        id=\"btn-toggle-project-creator\"\r\n        onClick={() => toggleActive(true)}\r\n      >\r\n        Start New Project\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/ProjectsMenu.css\";\r\nimport { apiDomain as URL } from \"../utils/apiDomain\";\r\nimport createRequest from \"../utils/createRequest\";\r\nimport NewProjectCreator from \"./NewProjectCreator\";\r\n\r\nexport default function ProjectsMenu() {\r\n  const projects = useSelector((state) => state.user.projects, shallowEqual);\r\n  const token = useSelector((state) => state.token);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  async function handleCreateProject(e) {\r\n    e.preventDefault();\r\n    // TODO add blank title error handling\r\n    const request = createRequest(\"POST\", token, {\r\n      title: `${document.getElementById(\"new-project-title\").value}`,\r\n    });\r\n    const response = await fetch(`${URL}/api/projects/`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      console.log(result);\r\n      await dispatch({\r\n        type: \"project/created\",\r\n        payload: result.project,\r\n        token: token,\r\n      });\r\n      navigate(`../project/${result.project.projectId}`);\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteProject(projectId) {\r\n    const request = createRequest(\"DELETE\", token);\r\n    const response = await fetch(`${URL}/api/projects/${projectId}`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      dispatch({\r\n        type: \"project/deleted\",\r\n        payload: { projectId: projectId },\r\n        token: token,\r\n      });\r\n    } else {\r\n      console.log(response.status);\r\n    }\r\n  }\r\n\r\n  async function handleLoadProject(projectId) {\r\n    const request = createRequest(\"GET\", token);\r\n    const response = await fetch(`${URL}/api/projects/${projectId}`, request);\r\n    if (response.ok) {\r\n      const token = response.headers.get(\"X-Auth-Token\");\r\n      const result = await response.json();\r\n      console.log(result);\r\n      dispatch({\r\n        type: \"project/loaded\",\r\n        payload: result.project,\r\n        token: token,\r\n      });\r\n      navigate(`../project/${projectId}`);\r\n    }\r\n  }\r\n\r\n  const listProjects = projects\r\n    ? projects.map((project) => {\r\n        return (\r\n          //TODO: Change to project.id\r\n          <li key={project.projectId}>\r\n            {project.title}\r\n            <button onClick={() => handleLoadProject(project.projectId)}>\r\n              Edit\r\n            </button>\r\n            <button onClick={() => handleDeleteProject(project.projectId)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })\r\n    : null;\r\n\r\n  return (\r\n    <div id=\"projects-menu\">\r\n      {projects && <ul id=\"projects-list\">{listProjects}</ul>}\r\n      <NewProjectCreator />\r\n    </div>\r\n  );\r\n}\r\n","/* This page should contain user settings control as well as list of projects */\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/UserPage.css\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport ProjectsMenu from \"../ProjectsMenu\";\r\n\r\nexport default function UserPage() {\r\n  const user = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <PageHeader></PageHeader>\r\n      <nav id=\"mode-selector\">\r\n        <button>My Projects</button>\r\n        <button onClick={() => navigate(`/user/${user.id}/settings`)}>\r\n          Settings\r\n        </button>\r\n      </nav>\r\n      <ProjectsMenu />\r\n    </>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\n\r\nexport default function UserSettings() {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <>\r\n      <h2>User Name:</h2>\r\n      <p>{user.name}</p>\r\n      <button>Edit</button>\r\n      <h2>Email Address:</h2>\r\n      <p>{user.email}</p>\r\n      <button>Edit</button>\r\n\r\n      <h2>Password</h2>\r\n      <button>Reset Password</button>\r\n    </>\r\n  );\r\n}\r\n","/* This page should contain user settings control as well as list of projects */\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/UserPage.css\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport UserSettings from \"../UserSettings\";\r\n\r\nexport default function UserPage() {\r\n  const user = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <PageHeader></PageHeader>\r\n      <nav id=\"mode-selector\">\r\n        <button onClick={() => navigate(`/user/${user.id}/projects`)}>\r\n          My Projects\r\n        </button>\r\n        <button>User Settings</button>\r\n      </nav>\r\n      <UserSettings />\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* This reducer handles redux actions affecting state.project */\r\n\r\nconst initialState = {\r\n  projectId: null,\r\n  title: \"\",\r\n  stages: [],\r\n};\r\n\r\nexport default function projectReducer(prevState = initialState, action) {\r\n  let state = { ...prevState }; // mutate new state not prevState\r\n  const payload = action.payload;\r\n  if (\r\n    action.type.startsWith(\"project\") ||\r\n    action.type.startsWith(\"stage\") ||\r\n    action.type.startsWith(\"task\")\r\n  ) {\r\n    console.log(payload);\r\n  }\r\n\r\n  switch (action.type) {\r\n    /***** Project actions *****/\r\n    case \"project/reorderStages\": {\r\n      state.stages = payload;\r\n      return state;\r\n    }\r\n    case \"project/created\": {\r\n      if (!state.projectId) {\r\n        state = payload;\r\n      }\r\n      return state;\r\n    }\r\n    case \"project/loaded\": {\r\n      state = payload;\r\n      return state;\r\n    }\r\n    case \"project/unloaded\": {\r\n      return initialState;\r\n    }\r\n    case \"project/deleted\": {\r\n      // TODO: amend to just payload not payload.project\r\n      if (payload.projectId === state.projectId) {\r\n        return initialState;\r\n      }\r\n      return state;\r\n    }\r\n\r\n    /***** Stage actions *****/\r\n    case \"stage/created\": {\r\n      state.stages = state.stages.concat(payload);\r\n      return state;\r\n    }\r\n    case \"stage/updated\": {\r\n      const index = state.stages.findIndex(\r\n        (stage) => stage.stageId === payload.stageId\r\n      );\r\n      state.stages[index] = payload;\r\n      return state;\r\n    }\r\n    case \"stage/deleted\": {\r\n      state.stages = state.stages.filter(\r\n        (stage) => stage.stageId !== payload.stageId\r\n      );\r\n      return state;\r\n    }\r\n\r\n    /***** Task actions *****/\r\n    case \"task/created\": {\r\n      // find stage\r\n      const stage = state.stages.find(\r\n        (stage) => stage.stageId === payload.stageId\r\n      );\r\n      // add new task\r\n      stage.tasks = stage.tasks.concat(payload.task);\r\n      return state;\r\n    }\r\n    case \"task/deleted\": {\r\n      // find stage\r\n      const stage = state.stages.find(\r\n        (stage) => stage.stageId === payload.stageId\r\n      );\r\n      // delete task\r\n      stage.tasks = stage.tasks.filter(\r\n        (task) => task.taskId !== payload.taskId\r\n      );\r\n      return state;\r\n    }\r\n    case \"task/updated\": {\r\n      // locate stage\r\n      const stageIndex = state.stages.findIndex(\r\n        (stage) => stage.stageId === payload.stageId\r\n      );\r\n      // locate task\r\n      const taskIndex = state.stages[stageIndex].tasks.findIndex(\r\n        (task) => task.taskId === payload.task.taskId\r\n      );\r\n      state.stages[stageIndex].tasks[taskIndex] = payload.task;\r\n      return state;\r\n    }\r\n\r\n    /***** User actions *****/\r\n    case \"user/loggedOut\": {\r\n      return initialState;\r\n    }\r\n\r\n    /***** Default *****/\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","/* This reducer handles redux actions affecting state.user */\r\n\r\nconst initialState = {};\r\n\r\nexport default function userReducer(prevState = initialState, action) {\r\n  let state = { ...prevState }; //mutate new state not prevState\r\n  const payload = action.payload;\r\n\r\n  switch (action.type) {\r\n    case \"user/created\":\r\n      state = payload;\r\n      state.flag = \"EMAIL_CONFIRMATION\"; //TODO: use me\r\n      return state;\r\n\r\n    case \"user/loggedIn\":\r\n      state = payload;\r\n      state.flag = \"LOGGED_IN\";\r\n      return state;\r\n\r\n    case \"user/failedLogin\":\r\n      state = { flag: \"FAILED_LOGIN\" };\r\n      return state;\r\n\r\n    case \"user/loggedOut\":\r\n      state = { flag: \"LOGGED_OUT\" };\r\n      return state;\r\n\r\n    case \"user/deleted\": // currently not in use\r\n      state = { flag: \"DELETED\" };\r\n      return state;\r\n\r\n    case \"user/reorderProjects\":\r\n      /* Currently this triggers re-render of stages & tasks */\r\n      /* This is unnecessary and may be optimized */\r\n      state.projects = payload;\r\n      return state;\r\n\r\n    case \"project/created\":\r\n      /* add project data to user.projects */\r\n      state.projects = state.projects.concat({\r\n        title: payload.title,\r\n        projectId: payload.projectId,\r\n      });\r\n      return state;\r\n\r\n    case \"project/deleted\":\r\n      /* remove deleted project from user.projects */\r\n      state.projects = state.projects.filter(\r\n        (project) => project.projectId !== payload.projectId\r\n      );\r\n      return state;\r\n\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport tokenReducer from \"./tokenReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  project: projectReducer,\r\n  user: userReducer,\r\n  token: tokenReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","/* Refreshes auth token or deletes token on logout*/\r\nconst initialState = \"\";\r\n\r\nexport default function userReducer(prevState = initialState, action) {\r\n  if (action.token) {\r\n    return action.token;\r\n  }\r\n  if (action.type === \"user/loggedOut\") {\r\n    return initialState;\r\n  }\r\n  return prevState;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Outlet, Route, Routes } from \"react-router-dom\";\r\nimport { createStore } from \"redux\";\r\nimport HomePage from \"./components/Pages/HomePage\";\r\nimport LogoutPage from \"./components/Pages/LogoutPage\";\r\nimport ProjectPage from \"./components/Pages/ProjectPage\";\r\nimport Redirect from \"./components/Pages/Redirect\";\r\nimport SignupPage from \"./components/Pages/SignupPage\";\r\nimport UnsavedProjectPage from \"./components/Pages/UnsavedProjectPage\";\r\nimport UserProjectsPage from \"./components/Pages/UserProjectsPage\";\r\nimport UserSettingsPage from \"./components/Pages/UserSettingsPage\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport rootReducer from \"./state/rootReducer\";\r\nimport \"./styles/index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={createStore(rootReducer)}>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Outlet />}>\r\n            <Route index element={<HomePage />} />\r\n            <Route path=\"signup\" element={<SignupPage />} />\r\n            <Route path=\"logout\" element={<LogoutPage />} />\r\n            <Route path=\"user/:userId/\" element={<Redirect />} />\r\n            <Route\r\n              path=\"user/:userId/projects\"\r\n              element={<UserProjectsPage />}\r\n            />\r\n            <Route\r\n              path=\"user/:userId/settings\"\r\n              element={<UserSettingsPage />}\r\n            />\r\n            <Route path=\"project/:projectId\" element={<ProjectPage />} />\r\n            <Route path=\"unsavedproject\" element={<UnsavedProjectPage />} />\r\n            <Route path=\"*\" element={<HomePage />} />\r\n          </Route>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}