{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","message","setMessage","e","a","preventDefault","request","method","cache","headers","body","JSON","stringify","fetch","response","ok","json","result","console","log","status","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAmCeA,MAhCf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KADa,4CAGb,WAAyBC,GAAzB,mBAAAC,EAAA,6DACED,EAAEE,iBACIC,EAAU,CACdC,OAAQ,MACRC,MAAO,WACPC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEX,QAAS,WANpC,SAQyBY,MACrB,2CACAP,GAVJ,YAQQQ,EARR,QAYeC,GAZf,iCAayBD,EAASE,OAblC,OAaUC,EAbV,OAcIC,QAAQC,IAAIF,GACZf,EAAWe,EAAOhB,SAftB,wBAiBIiB,QAAQC,IAAIL,EAASM,QAjBzB,6CAHa,sBAwBb,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQC,QA1BC,4CA0BT,8BACA,4BAAIrB,QClBKsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2e00d76c.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n\n  async function testFetch(e) {\n    e.preventDefault();\n    const request = {\n      method: \"GET\",\n      cache: \"no-store\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ message: \"echo!\" }),\n    };\n    const response = await fetch(\n      \"https://taskflow.herokuapp.com/testfetch\",\n      request\n    );\n    if (response.ok) {\n      const result = await response.json();\n      console.log(result);\n      setMessage(result.message);\n    } else {\n      console.log(response.status);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={testFetch}>Fetch something!</button>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}